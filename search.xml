<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>spring MVC 续</title>
    <url>/2020/02/09/springmvc2/</url>
    <content><![CDATA[<h1 id="RequsetMapping"><a href="#RequsetMapping" class="headerlink" title="@RequsetMapping"></a>@RequsetMapping</h1><p>@RequestMapping注解用于映射url到控制器类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="comment">//@RequestMapping("/a")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">//访问地址为(http://localhost:8081/a1)</span></span><br><span class="line">    <span class="comment">//若类前面有@RequestMapping("/a")访问地址为(http://localhost:8081/a/a1)</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>,<span class="string">"ok"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参数接收"><a href="#参数接收" class="headerlink" title="参数接收"></a>参数接收</h2><h3 id="1-普通参数"><a href="#1-普通参数" class="headerlink" title="1. 普通参数"></a>1. 普通参数</h3><p><a href="http://localhost:8081/a1?username=admin&amp;pwd=123456">http://localhost:8081/a1?username=admin&amp;pwd=123456</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">//名称一致的可以直接写</span></span><br><span class="line">    <span class="comment">//名称不一致的加@RequestParam("pwd") 注解</span></span><br><span class="line">    <span class="comment">//建议一致或者不一致都写@RequestParam() </span></span><br><span class="line">     <span class="meta">@RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(String name, @RequestParam(<span class="string">"pwd"</span>)</span> String password)</span>&#123;</span><br><span class="line">        System.out.println(name+<span class="string">"\n"</span>+password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-接受方也可以是对象"><a href="#2-接受方也可以是对象" class="headerlink" title="2. 接受方也可以是对象"></a>2. 接受方也可以是对象</h3><p>前提，对象的属性和前端必须保持一致提供set方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.Model;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", pwd='"</span> + pwd + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">//可以直接写User user 对应属性会被设置进去，没有的会为null</span></span><br><span class="line">     <span class="meta">@RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-HttpServletRequest"><a href="#3-HttpServletRequest" class="headerlink" title="3. HttpServletRequest"></a>3. HttpServletRequest</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">//可以直接写User user 对应属性会被设置进去，没有的会为null</span></span><br><span class="line">     <span class="meta">@RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);  			String pwd = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">		System.out.println(name+<span class="string">"\n"</span>+password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-RestFul"><a href="#4-RestFul" class="headerlink" title="4. RestFul"></a>4. RestFul</h3><p>参数在路径中，上方的链接变成了</p>
<p><a href="http://localhost:8081/a1/admin/123456">http://localhost:8081/a1/admin/123456</a></p>
<blockquote>
<p> url含有中文名称时，因为编码问题，无法进行映射，需要修改tomcat下的conf文件夹下的server.xml中的URIEncoding=”UTF-8”</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 限制get请求并设置返回编码为utf-8</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/a1/&#123;name&#125;/&#123;pwd&#125;"</span>, method = RequestMethod.GET, produces = &#123;<span class="string">"application/json;charset=UTF-8"</span>&#125;)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(@PathVariable String name, @PathVariable String pwd)</span></span>&#123;</span><br><span class="line">		System.out.println(name+<span class="string">"\n"</span>+pwd);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-JSON方式"><a href="#5-JSON方式" class="headerlink" title="5. JSON方式"></a>5. JSON方式</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span></span><br><span class="line">  </span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要导入jackson的支持，会被自动装配的配置项 <strong><mvc:annotation-driven /></strong> 装配</p>
<p>&gt;<br>&gt;</p>
<blockquote>
<p>前端提示：HTTP Status 415 – 不支持的媒体类型</p>
<p>后端提示：Content type ‘application/json’ not supported]</p>
</blockquote>
<p><strong>前端发送的Header前面需要加上Content-Type:”application/json”</strong></p>
<blockquote>
<p>前端提示：HTTP Status 415 – 不支持的媒体类型</p>
<p>​                    描述源服务器拒绝服务请求，因为有效负载的格式在目标资源上此方法不支持。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/a"</span>, method = &#123;RequestMethod.POST&#125;,  consumes = &#123;<span class="string">"application/json"</span>&#125;)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(@RequestBody User user)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><strong>consumes设置后，只处理Content-Type:“application/json”</strong>的数据</p>
<h2 id="组合注解"><a href="#组合注解" class="headerlink" title="组合注解"></a>组合注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="meta">@PutMapping</span></span><br><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="meta">@PatchMapping</span></span><br></pre></td></tr></table></figure>
<p>@GetMapping 等同于 @RequestMapping(method =RequestMethod.GET)</p>
<h1 id="转发与重定向"><a href="#转发与重定向" class="headerlink" title="转发与重定向"></a>转发与重定向</h1><ul>
<li>在视图解析器中，默认就是转发</li>
<li>重定向的话 return “redirect:index.jsp”或者return “redirect:test1”另一个RequestMapping</li>
</ul>
<h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在请求处理的方法之前执行</span></span><br><span class="line">    <span class="comment">//如果返回true执行下一个拦截器</span></span><br><span class="line">    <span class="comment">//如果返回false就不执行下一个拦截器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"------------处理前------------"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//true继续向下走</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在请求处理方法执行之后执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"------------处理后------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在dispatcherServlet处理后执行,做清理工作.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"------------清理------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--关于拦截器的配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--/** 包括路径及其子路径--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--/* 拦截的是/一级的--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bean配置的就是拦截器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"top.wmgx.interceptor.MyInterceptor"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h2 id="前端设置"><a href="#前端设置" class="headerlink" title="前端设置"></a>前端设置</h2><p><strong>enctype=”multipart/form-data”</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--servlet-api导入高版本的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="配置sping配置文件"><a href="#配置sping配置文件" class="headerlink" title="配置sping配置文件"></a>配置sping配置文件</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span>  <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上传文件大小上限，单位为字节（10485760=10M） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"10485760"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxInMemorySize"</span> <span class="attr">value</span>=<span class="string">"40960"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>multipartResolver</strong> 命名一定是这个</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul>
<li><strong>String getOriginalFilename()：获取上传文件的原名</strong></li>
<li><strong>InputStream getInputStream()：获取文件流</strong></li>
<li><strong>void transferTo(File dest)：将上传文件保存到一个目录文件中</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@RequestParam("file") 将得到的文件封装成CommonsMultipartFile 对象</span></span><br><span class="line">   <span class="comment">//批量上传CommonsMultipartFile则为数组即可</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">Upload</span><span class="params">(@RequestParam(<span class="string">"file"</span>)</span> CommonsMultipartFile file , HttpServletRequest request) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       <span class="comment">//获取文件名 : file.getOriginalFilename();</span></span><br><span class="line">       String uploadFileName = file.getOriginalFilename();</span><br><span class="line">       <span class="comment">//如果文件名为空，直接回到首页！</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="string">""</span>.equals(uploadFileName))&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">"上传文件名 : "</span>+uploadFileName);</span><br><span class="line">       <span class="comment">//上传路径保存设置</span></span><br><span class="line">       String path = request.getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">       <span class="comment">//如果路径不存在，创建一个</span></span><br><span class="line">       File realPath = <span class="keyword">new</span> File(path);</span><br><span class="line">       <span class="keyword">if</span> (!realPath.exists())&#123;</span><br><span class="line">           realPath.mkdir();</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">"上传文件保存地址："</span>+realPath);</span><br><span class="line">       InputStream is = file.getInputStream(); <span class="comment">//文件输入流</span></span><br><span class="line">       OutputStream os = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(realPath,uploadFileName)); <span class="comment">//文件输出流</span></span><br><span class="line">       <span class="comment">//读取写出</span></span><br><span class="line">       <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">       <span class="keyword">while</span> ((len=is.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">           os.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">           os.flush();</span><br><span class="line">       &#125;</span><br><span class="line">       os.close();</span><br><span class="line">       is.close();</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>利用file。Transto</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 采用file.Transto 来保存上传的文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String  <span class="title">upload</span><span class="params">(@RequestParam(<span class="string">"file"</span>)</span> CommonsMultipartFile file, HttpServletRequest request) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//上传路径保存设置</span></span><br><span class="line">    String path = request.getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">    File realPath = <span class="keyword">new</span> File(path);</span><br><span class="line">    <span class="keyword">if</span> (!realPath.exists())&#123;</span><br><span class="line">        realPath.mkdir();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上传文件地址</span></span><br><span class="line">    System.out.println(<span class="string">"上传文件保存地址："</span>+realPath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过CommonsMultipartFile的方法直接写文件（注意这个时候）</span></span><br><span class="line">    file.transferTo(<span class="keyword">new</span> File(realPath +<span class="string">"/"</span>+ file.getOriginalFilename()));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/download"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">downloads</span><span class="params">(@RequestParam(<span class="string">"file"</span>)</span> String fileName,HttpServletResponse response , HttpServletRequest request) <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">       <span class="comment">//要下载的图片地址</span></span><br><span class="line">       String  path = request.getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">       <span class="comment">//1、设置response 响应头</span></span><br><span class="line">       response.reset(); <span class="comment">//设置页面不缓存,清空buffer</span></span><br><span class="line">       response.setCharacterEncoding(<span class="string">"UTF-8"</span>); <span class="comment">//字符编码</span></span><br><span class="line">       response.setContentType(<span class="string">"multipart/form-data"</span>); <span class="comment">//二进制传输数据</span></span><br><span class="line">       <span class="comment">//设置响应头</span></span><br><span class="line">       response.setHeader(<span class="string">"Content-Disposition"</span>,</span><br><span class="line">               <span class="string">"attachment;fileName="</span>+ URLEncoder.encode(fileName, <span class="string">"UTF-8"</span>));</span><br><span class="line">       File file = <span class="keyword">new</span> File(path,fileName);</span><br><span class="line">       <span class="comment">//2、 读取文件--输入流</span></span><br><span class="line">       InputStream input=<span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">       <span class="comment">//3、 写出文件--输出流</span></span><br><span class="line">       OutputStream out = response.getOutputStream();</span><br><span class="line">       <span class="keyword">byte</span>[] buff =<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">       <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">       <span class="comment">//4、执行 写出操作</span></span><br><span class="line">       <span class="keyword">while</span>((index= input.read(buff))!= -<span class="number">1</span>)&#123;</span><br><span class="line">           out.write(buff, <span class="number">0</span>, index);</span><br><span class="line">           out.flush();</span><br><span class="line">       &#125;</span><br><span class="line">       out.close();</span><br><span class="line">       input.close();</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>SSM</tag>
        <tag>sptingMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>spring MVC</title>
    <url>/2020/02/09/springmvc/</url>
    <content><![CDATA[<h1 id="1-导入基础支持"><a href="#1-导入基础支持" class="headerlink" title="1. 导入基础支持"></a>1. 导入基础支持</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="2-将相关jar包配置到web环境"><a href="#2-将相关jar包配置到web环境" class="headerlink" title="2. 将相关jar包配置到web环境"></a>2. 将相关jar包配置到web环境</h1><p><img src="https://image.wmgx.top/img/20200209062505.png" alt=""></p>
<h1 id="3-配置web-XML"><a href="#3-配置web-XML" class="headerlink" title="3. 配置web.XML"></a>3. 配置web.XML</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册Spring的servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 启动顺序，设置为最早启动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--所有请求都会被springmvc拦截 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--乱码过滤器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="4-配置Spring-MVC配置文件"><a href="#4-配置Spring-MVC配置文件" class="headerlink" title="4. 配置Spring MVC配置文件"></a>4. 配置Spring MVC配置文件</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"top.wmgx.controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 让Spring MVC不处理静态资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    开启mvc注解驱动支持</span></span><br><span class="line"><span class="comment">        在spring中采用@RequestMapping注解来完成映射关系</span></span><br><span class="line"><span class="comment">       	必须向上下文中注册DefaultAnnotationHandlerMapping</span></span><br><span class="line"><span class="comment">        和一个AnnotationMethodHandlerAdapter实例</span></span><br><span class="line"><span class="comment">        这两个实例分别在类级别和方法级别处理。</span></span><br><span class="line"><span class="comment">        而annotation-driven配置自动完成上述两个实例的注入。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="5-创建Controller"><a href="#5-创建Controller" class="headerlink" title="5. 创建Controller"></a>5. 创建Controller</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="comment">//@RequestMapping("/a")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="comment">//访问地址为(http://localhost:8081/a1)</span></span><br><span class="line">    <span class="comment">//若类前面有@RequestMapping("/a")访问地址为(http://localhost:8081/a/a1)</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/a1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>,<span class="string">"ok"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="以下为非注解实现"><a href="#以下为非注解实现" class="headerlink" title="以下为非注解实现"></a>以下为非注解实现</h1><h1 id="1，2-3相同"><a href="#1，2-3相同" class="headerlink" title="1，2,3相同"></a>1，2,3相同</h1><h1 id="4-创建-Cotroller"><a href="#4-创建-Cotroller" class="headerlink" title="4. 创建 Cotroller"></a>4. 创建 Cotroller</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：这里我们先导入Controller接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//ModelAndView 模型和视图</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">"msg"</span>,<span class="string">"ok!"</span>);</span><br><span class="line">        <span class="comment">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class="line">        mv.setViewName(<span class="string">"test"</span>);<span class="comment">//转跳位置</span></span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="5-配置Spring-MVC配置文件"><a href="#5-配置Spring-MVC配置文件" class="headerlink" title="5. 配置Spring MVC配置文件"></a>5. 配置Spring MVC配置文件</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">--!添加</span> 处理映射器<span class="attr">--</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">--!添加</span> 处理器适配器<span class="attr">--</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"</span>/&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span> <span class="attr">id</span>=<span class="string">"InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--id 请求位置，class是哪个类--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"/a1"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.controller.Hello"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>SSM</tag>
        <tag>springMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>第一个spring</title>
    <url>/2020/02/02/%E7%AC%AC%E4%B8%80%E4%B8%AAspring/</url>
    <content><![CDATA[<h1 id="1-新建maven-导入依赖"><a href="#1-新建maven-导入依赖" class="headerlink" title="1. 新建maven 导入依赖"></a>1. 新建maven 导入依赖</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="2-编写对应类"><a href="#2-编写对应类" class="headerlink" title="2. 编写对应类"></a>2. 编写对应类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] grade;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Integer&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="3-配置文件中注入"><a href="#3-配置文件中注入" class="headerlink" title="3. 配置文件中注入"></a>3. 配置文件中注入</h1><h2 id="3-1-set注入和构造器注入"><a href="#3-1-set注入和构造器注入" class="headerlink" title="3.1 set注入和构造器注入"></a>3.1 set注入和构造器注入</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">&lt;!--    以构造方法注入    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Address"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"asdfe"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">&lt;!--    注入    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"lht"</span>/&gt;</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">&lt;!--        若为引用类型，用ref 称为bean注入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">ref</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-2-其他注入"><a href="#3-2-其他注入" class="headerlink" title="3.2 其他注入"></a>3.2 其他注入</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user1"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"grade"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>4<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            list注入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            map注入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"a"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"b"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            null值注入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"address"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            Properties--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"jdbc"</span>&gt;</span>jdbc:mysql://loclhost:3306<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"pwd"</span>&gt;</span>pwd<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-3-p命名空间和c命名空间"><a href="#3-3-p命名空间和c命名空间" class="headerlink" title="3.3 p命名空间和c命名空间"></a>3.3 p命名空间和c命名空间</h2><h3 id="3-3-1导入配置"><a href="#3-3-1导入配置" class="headerlink" title="3.3.1导入配置"></a>3.3.1导入配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:p="http://www.springframework.org/schema/p"</span><br><span class="line">xmlns:c="http://www.springframework.org/schema/c"</span><br></pre></td></tr></table></figure>
<h3 id="3-3-2注入"><a href="#3-3-2注入" class="headerlink" title="3.3.2注入"></a>3.3.2注入</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Address"</span> <span class="attr">p:name</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"address1"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Address"</span> <span class="attr">c:name</span>=<span class="string">"address"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>p相当于是set注入</li>
<li>c相当于是构造器注入</li>
</ul>
<h1 id="4-spring-配置"><a href="#4-spring-配置" class="headerlink" title="4 spring 配置"></a>4 spring 配置</h1><h2 id="4-1-别名"><a href="#4-1-别名" class="headerlink" title="4.1 别名"></a>4.1 别名</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--可以使用别名获取类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">alias</span>=<span class="string">"userNew"</span>&gt;</span><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Bean中可以添加多个别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userT"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.UserT"</span> <span class="attr">name</span>=<span class="string">"user2,u2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-2-导入其他配置文件"><a href="#4-2-导入其他配置文件" class="headerlink" title="4.2 导入其他配置文件"></a>4.2 导入其他配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"beans.xml"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="5-bean的作用域"><a href="#5-bean的作用域" class="headerlink" title="5. bean的作用域"></a>5. bean的作用域</h1><ol>
<li><p>代理模式（默认机制）：get到的都是<strong>同一个对象</strong>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user2"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span> <span class="attr">c:age</span>=<span class="string">"18"</span> <span class="attr">c:name</span>=<span class="string">"AA"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>原型模式：每次从容器中get的时候，都会<strong>产生一个新的对象</strong>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user2"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span> <span class="attr">c:age</span>=<span class="string">"18"</span> <span class="attr">c:name</span>=<span class="string">"AA"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>equest、session、application 在web开发中使用。</p>
</li>
</ol>
<h1 id="6-Bean的自动装配"><a href="#6-Bean的自动装配" class="headerlink" title="6. Bean的自动装配"></a>6. Bean的自动装配</h1><ol>
<li><p>xml中显示配置</p>
</li>
<li><p>java中显示配置</p>
</li>
<li><p>隐式自动装配</p>
</li>
</ol>
<h2 id="6-1-byName自动装配"><a href="#6-1-byName自动装配" class="headerlink" title="6.1  byName自动装配"></a>6.1  byName自动装配</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    byName:会自动在容器上下文中查找和自己对象set方法后面的值对应的beanid！</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Address"</span> <span class="attr">p:name</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    user中的adddress 会自动注入上面的address</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span> <span class="attr">autowire</span>=<span class="string">"byName"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：bean的ID需要和set方法后面的单词一致（首字母小写）</strong></p>
<h2 id="6-2-byType自动装配"><a href="#6-2-byType自动装配" class="headerlink" title="6.2 byType自动装配"></a>6.2 byType自动装配</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    byName:会自动在容器上下文中查找和自己对象set方法后面的值对应的beanid！</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Address"</span> <span class="attr">p:name</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    user中的adddress 会自动注入上面的address</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.User"</span> <span class="attr">autowire</span>=<span class="string">"byType"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：bean中的class唯一，只能有一个这个类型的bean</strong></p>
<h1 id="7-注解自动装配"><a href="#7-注解自动装配" class="headerlink" title="7 注解自动装配"></a>7 注解自动装配</h1><h2 id="7-1-导入约束"><a href="#7-1-导入约束" class="headerlink" title="7.1 导入约束"></a>7.1 导入约束</h2><p>加入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">beans标签中加入  xmlns:context="http://www.springframework.org/schema/context"</span></span><br><span class="line"><span class="comment">与</span></span><br><span class="line"><span class="comment">http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="comment">https://www.springframework.org/schema/context/spring-context.xsd"</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">同时开启注解配置支持</span></span><br><span class="line"><span class="comment"> &lt;context:annotation-config/&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="7-2-Autowired"><a href="#7-2-Autowired" class="headerlink" title="7.2 @Autowired"></a>7.2 @Autowired</h2><p>注解在属性上使用，可以不写set方法，</p>
<p>在使用@Autowired时，首先在容器中查询对应类型的bean</p>
<ul>
<li><p>如果查询结果刚好为一个，就将该bean装配给@Autowired指定的数据(<strong>byType</strong>)</p>
</li>
<li><p>如果查询的结果不止一个，那么@Autowired会根据名称来查找(<strong>byname</strong>)</p>
</li>
<li>如果查询的结果为空，那么会抛出异常。解决方法时，使用required=false</li>
</ul>
<h2 id="7-3-Resource"><a href="#7-3-Resource" class="headerlink" title="7.3 @Resource"></a>7.3 @Resource</h2><ul>
<li>@Resource默认按照名称方式进行bean匹配</li>
<li>@Autowired默认按照类型方式进行bean匹配</li>
<li>如果同时指定了name和type，则从Spring上下文中找到唯一匹配的bean进行装配，找不到则抛出异常</li>
<li>如果指定了name，则从上下文中查找名称（id）匹配的bean进行装配，找不到则抛出异常</li>
<li>如果指定了type，则从上下文中找到类型匹配的唯一bean进行装配，找不到或者找到多个，都会抛出异常</li>
<li>如果既没有指定name，又没有指定type，则自动按照byName方式进行装配；如果没有匹配，则回退为一个原始类型进行匹配，如果匹配则自动装配；</li>
</ul>
<p><strong>二者既可以放在属性上也可以放在set方法上（set方法可以省略）</strong></p>
<h2 id="8-注解开发"><a href="#8-注解开发" class="headerlink" title="8  注解开发"></a>8  注解开发</h2><h2 id="8-1-导入aop包"><a href="#8-1-导入aop包" class="headerlink" title="8.1 导入aop包"></a>8.1 导入aop包</h2><p>在导入的 <strong>spring-webmvc:5.2.3</strong>中已经默认包含，使用低版本spring时要手动导入。</p>
<h2 id="8-2-导入context约束"><a href="#8-2-导入context约束" class="headerlink" title="8.2 导入context约束"></a>8.2 导入context约束</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定要扫描的包，包下的注解会自动生效--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"top.wmgx.spring"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="8-3-注解"><a href="#8-3-注解" class="headerlink" title="8.3 注解"></a>8.3 注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="comment">// 声明是一个组件</span></span><br><span class="line"><span class="comment">//Component(“id”)可以指定ID 默认是首字母小写</span></span><br><span class="line"><span class="meta">@Component</span>()</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="comment">//相当于&lt;property name="name" value="123123"/&gt;</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"123123"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-3-1-自动装配"><a href="#8-3-1-自动装配" class="headerlink" title="8.3.1 自动装配"></a>8.3.1 自动装配</h3><ul>
<li><p>@Autowired：同上</p>
</li>
<li><p>@Resource：同上</p>
</li>
<li><p>@Value：值</p>
</li>
<li><p>@Qualifier(value=”“bean的名字””)</p>
<ul>
<li>一般不会单独使用，跟@Autowired 搭配使用。</li>
<li>即一个接口有多个实现类，在注入不同的实现类的时候，只用@Autowired就会出错，此时就要引入@Qualifier注释加以区分。</li>
<li>value=“bean的名字”</li>
</ul>
</li>
<li><p>@Nullable:字段标记了这个注解，说明这个字段可以为null</p>
</li>
</ul>
<h1 id="9-使用java配置Spring"><a href="#9-使用java配置Spring" class="headerlink" title="9 使用java配置Spring"></a>9 使用java配置Spring</h1><h2 id="9-1-编写配置类"><a href="#9-1-编写配置类" class="headerlink" title="9.1 编写配置类"></a>9.1 编写配置类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="comment">//表示会被spring接管</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//表示这是一个配置类</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//扫描哪个包</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"top.wmgx.spring"</span>)</span><br><span class="line"><span class="comment">//如果要引入其他的配置类</span></span><br><span class="line"><span class="comment">//可以使用 @Import(Config1.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line">    <span class="comment">//相当于是一个bean，方法名就是ID</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="9-2-测试类"><a href="#9-2-测试类" class="headerlink" title="9.2 测试类"></a>9.2 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//注意改为了AnnotationConfigApplicationContext</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(Config.class);</span><br><span class="line">        User user =(User)context.getBean(<span class="string">"getUser"</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="10-AOP"><a href="#10-AOP" class="headerlink" title="10. AOP"></a>10. AOP</h1><h2 id="10-1-什么是AOP"><a href="#10-1-什么是AOP" class="headerlink" title="10.1 什么是AOP"></a>10.1 什么是AOP</h2><p>AOP（Aspect Oriented Programming）意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生泛型，利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的频率。</p>
<h2 id="10-2-使用"><a href="#10-2-使用" class="headerlink" title="10.2 使用"></a>10.2 使用</h2><p>==提供声明式事务；允许用户自定义切面==</p>
<ul>
<li>横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点，如日志、安全、缓存、事务等等……</li>
<li>切面（ASPECT）：横切关注点被模块化的特殊对象，即是一个类。</li>
<li>通知（Advice）：切面必须要完成的工作，即是类中的一个方法。</li>
<li>目标（Target）：被通知对象。</li>
<li>代理（Proxy）：向目标对象应用通知之后创建的对象。</li>
<li>切入点（PointCut）：切面通知执行的“地点”的定义。</li>
<li>连接点（jointPoint）：与切入点匹配的执行点。</li>
</ul>
<p>SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice：</p>
<p><img src="https://image.wmgx.top/img/20200206001734.png" alt=""></p>
<h2 id="10-3-实现"><a href="#10-3-实现" class="headerlink" title="10.3 实现"></a>10.3 实现</h2><h3 id="10-3-1-导入依赖"><a href="#10-3-1-导入依赖" class="headerlink" title="10.3.1 导入依赖"></a>10.3.1 导入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>xml中要添加AOP的约束</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:aop="http://www.springframework.org/schema/aop"</span><br><span class="line">http://www.springframework.org/schema/aop</span><br><span class="line">        http://www.springframework.org/schema/aop/spring-aop.xsd</span><br></pre></td></tr></table></figure>
<h3 id="10-3-2-通过-Spring-API-实现"><a href="#10-3-2-通过-Spring-API-实现" class="headerlink" title="10.3.2 通过 Spring API 实现"></a>10.3.2 通过 Spring API 实现</h3><h4 id="1-编写业务接口和实现类"><a href="#1-编写业务接口和实现类" class="headerlink" title="1. 编写业务接口和实现类"></a>1. 编写业务接口和实现类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"增加用户"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"删除用户"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"更新用户"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"查询用户"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"top.wmgx.spring"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    将切入类与要切入的类注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"log"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Log"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"UserServiceImp"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.UserServiceImp"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置切入点--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        切入点的命名，要切入的方法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        1、execution(): 表达式主体。</span></span><br><span class="line"><span class="comment">            2、第一个*号：表示返回类型， *号表示所有的类型。</span></span><br><span class="line"><span class="comment">            3、包名：表示需要拦截的包名，后面的两个句点表示当前包和当前包的所有子包，com.sample.service.impl包、子孙包下所有类的方法。</span></span><br><span class="line"><span class="comment">            4、第二个*号：表示类名，*号表示所有的类。</span></span><br><span class="line"><span class="comment">            5、*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* top.wmgx.spring.UserServiceImp.* (..))"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置切入类，到具体的切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"log"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>Test</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"SpringTest.xml"</span>);</span><br><span class="line">        UserService user =(UserService)context.getBean(<span class="string">"UserServiceImp"</span>);</span><br><span class="line">        user.add();</span><br><span class="line">        user.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://image.wmgx.top/img/20200206005031.png" alt=""></p>
<h3 id="10-3-3-自定义类来实现Aop"><a href="#10-3-3-自定义类来实现Aop" class="headerlink" title="10.3.3 自定义类来实现Aop"></a>10.3.3 自定义类来实现Aop</h3><h4 id="写一个切入类"><a href="#写一个切入类" class="headerlink" title="写一个切入类"></a>写一个切入类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> <span class="keyword">implements</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"之前"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"之后"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    将切入类与要切入的类注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"log"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Log"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"UserServiceImp"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.UserServiceImp"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置切入点--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"log"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* top.wmgx.spring.UserServiceImp.* (..))"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        配置切入类，到具体的切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span> <span class="attr">method</span>=<span class="string">"before"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span> <span class="attr">method</span>=<span class="string">"after"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="10-3-4-注解实现"><a href="#10-3-4-注解实现" class="headerlink" title="10.3.4 注解实现"></a>10.3.4 注解实现</h3><h4 id="编写实现类"><a href="#编写实现类" class="headerlink" title="编写实现类"></a>编写实现类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span></span>&#123;</span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"execution(* top.wmgx.spring.UserServiceImp.* (..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"之前"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After</span>(<span class="string">"execution(* top.wmgx.spring.UserServiceImp.* (..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"之后"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"execution(* top.wmgx.spring.UserServiceImp.* (..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint jp)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"环绕前"</span>);</span><br><span class="line">        Object proceed = jp.proceed();<span class="comment">//手动调用执行</span></span><br><span class="line">        System.out.println(<span class="string">"环绕后"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"top.wmgx.spring"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"log"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.Log"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"UserServiceImp"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.UserServiceImp"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="https://image.wmgx.top/img/20200206010631.png" alt=""></p>
<h1 id="11-Mybatis整合"><a href="#11-Mybatis整合" class="headerlink" title="11 Mybatis整合"></a>11 Mybatis整合</h1><h2 id="11-1-导入相关jar包"><a href="#11-1-导入相关jar包" class="headerlink" title="11.1 导入相关jar包"></a>11.1 导入相关jar包</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>springtest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springtest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        webmvc--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        annotations-java5--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>annotations-java5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    aspectjweaver--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="实现方法一"><a href="#实现方法一" class="headerlink" title="实现方法一"></a>实现方法一</h2><p>不需要写 <strong>sqlSessionFactory</strong> 但是需要为原先的接口提供一个实现类，并且添加<strong>setSqlSession</strong>方法以接受<strong>setSqlSession</strong> ，并在接口是实现方法中提供<strong>setSqlSession</strong>的使用</p>
<ol>
<li><p>配置数据源</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置数据源：数据源有非常多，可以使用第三方的，也可使用Spring的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置SqlSessionFactory，关联MyBatis</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置SqlSessionFactory--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--关联Mybatis--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:top/wmgx/spring/dao/*.xml"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>注册sqlSessionTemplate，关联sqlSessionFactory</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSession"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--利用构造器注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">ref</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>增加Dao接口的实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImp</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSqlSession</span><span class="params">(SqlSessionTemplate sqlSession)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSession = sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置mybatis的配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.dao.UserDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>注册Dao接口实现类</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.dao.UserDaoImpl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSession"</span> <span class="attr">ref</span>=<span class="string">"sqlSession"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">        UserMapper mapper = (UserMapper) context.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        List&lt;User&gt; user = mapper.selectUser();</span><br><span class="line">        System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="实现方法二"><a href="#实现方法二" class="headerlink" title="实现方法二"></a>实现方法二</h2><p><strong>mybatis-spring1.2.3版以上的才有这个 </strong></p>
<p>dao继承Support类 , 直接利用 getSqlSession() 获得 , 然后直接注入SqlSessionFactory . 比起方式1 , 不需要管理SqlSessionTemplate</p>
<ol>
<li><p>UserDaoImp</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImp</span> <span class="keyword">extends</span> <span class="title">SqlSessionDaoSupport</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserMapper mapper = getSqlSession().getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改bean配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"top.wmgx.spring.dao.UserDaoImp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sqlSessionFactory"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">    UserMapper mapper = (UserMapper) context.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">    List&lt;User&gt; user = mapper.selectUser();</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="12-事务"><a href="#12-事务" class="headerlink" title="12 事务"></a>12 事务</h1><p>   <strong>编程式事务管理</strong></p>
<ul>
<li>将事务管理代码嵌到业务方法中来控制事务的提交和回滚</li>
<li><p>缺点：必须在每个事务操作业务逻辑中包含额外的事务管理代码</p>
<p><strong>声明式事务管理</strong></p>
</li>
<li><p>将事务管理代码从业务方法中分离出来，以声明的方式来实现事务管理。</p>
</li>
<li><p>将事务管理作为横切关注点，通过aop方法模块化。Spring中通过Spring AOP框架支持声明式事务管理</p>
<p><strong>事务管理器</strong></p>
</li>
<li><p>无论使用Spring的哪种事务管理策略（编程式或者声明式）事务管理器都是必须的。</p>
</li>
<li>就是 Spring的核心事务管理抽象，管理封装了一组独立于技术的方法。</li>
</ul>
<h2 id="12-1-导入头文件约束"><a href="#12-1-导入头文件约束" class="headerlink" title="12.1 导入头文件约束"></a>12.1 导入头文件约束</h2>   <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:tx="http://www.springframework.org/schema/tx"</span><br><span class="line"></span><br><span class="line">http://www.springframework.org/schema/tx</span><br><span class="line">http://www.springframework.org/schema/tx/spring-tx.xsd</span><br></pre></td></tr></table></figure>
<h2 id="12-2-JDBC事务"><a href="#12-2-JDBC事务" class="headerlink" title="12.2 JDBC事务"></a>12.2 JDBC事务</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="12-3-配置事务的通知"><a href="#12-3-配置事务的通知" class="headerlink" title="12.3 配置事务的通知"></a>12.3 配置事务的通知</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务通知--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置哪些方法使用什么样的事务,配置事务的传播特性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"search*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="12-4-配置AOP"><a href="#12-4-配置AOP" class="headerlink" title="12.4 配置AOP"></a>12.4 配置AOP</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置aop织入事务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"txPointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* top.wmgx.spring.dao.*.*(..))"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txPointcut"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="12-5-事务的传播特性"><a href="#12-5-事务的传播特性" class="headerlink" title="12.5 事务的传播特性"></a>12.5 事务的传播特性</h2><p>spring支持7种事务传播行为：</p>
<ul>
<li>propagation_requierd：如果当前没有事务，就新建一个事务，如果已存在一个事务中，加入到这个事务中。（默认）</li>
<li>propagation_supports：支持当前事务，如果没有当前事务，就以非事务方法执行。</li>
<li>propagation_mandatory：使用当前事务，如果没有当前事务，就抛出异常。</li>
<li>propagation_required_new：新建事务，如果当前存在事务，把当前事务挂起。</li>
<li>propagation_not_supported：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</li>
<li>propagation_never：以非事务方式执行操作，如果当前事务存在则抛出异常。</li>
<li>propagation_nested：如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与propagation_required类似的操作</li>
</ul>
<p>以<strong>propagation_requierd</strong>举例</p>
<p>当一个方法中，连续调用多个方法，或间接调用多个方法，这些方法将会工作于一个事务中。</p>
]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>SSM</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro kde桌面录屏闪烁</title>
    <url>/2020/01/27/manjaro-kde%E6%A1%8C%E9%9D%A2%E5%BD%95%E5%B1%8F%E9%97%AA%E7%83%81/</url>
    <content><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>manjro kde录制屏幕的时候存在闪屏现象</p>
<p>在系统设置中打开特效中的显示FPS后再录制屏幕不会闪屏</p>
<h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>在系统设置中的，显示和监控，混成器的避免撕裂设置成从不，问题解决。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>踩坑经验</tag>
      </tags>
  </entry>
  <entry>
    <title>第一个vue</title>
    <url>/2020/01/26/%E7%AC%AC%E4%B8%80%E4%B8%AAvue/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>KNN(K近邻)</title>
    <url>/2020/01/24/knn/</url>
    <content><![CDATA[<h1 id="百度百科"><a href="#百度百科" class="headerlink" title="百度百科"></a>百度百科</h1><p>邻近算法，或者说K最近邻(kNN，k-NearestNeighbor)分类算法是<a href="https://baike.baidu.com/item/数据挖掘/216477">数据挖掘</a>分类技术中最简单的方法之一。所谓K最近邻，就是k个最近的邻居的意思，说的是每个样本都可以用它最接近的k个邻居来代表。</p>
<p>KNN算法的核心思想是如果一个样本在特征空间中的k个最相邻的样本中的大多数属于某一个类别，则该样本也属于这个类别，并具有这个类别上样本的特性。该方法在确定分类决策上只依据最邻近的一个或者几个样本的类别来决定待分样本所属的类别。 kNN方法在类别决策时，只与极少量的相邻样本有关。由于kNN方法主要靠周围有限的邻近的样本，而不是靠判别类域的方法来确定所属类别的，因此对于类域的交叉或重叠较多的待分样本集来说，kNN方法较其他方法更为适合。</p>
<h1 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h1><ol>
<li><p>简单，易于理解，易于实现，无需估计参数，无需训练；</p>
</li>
<li><p>适合对稀有事件进行分类；</p>
</li>
<li><p>特别适合于多分类问题(multi-modal,对象具有多个类别标签)， kNN比SVM的表现要好。</p>
</li>
</ol>
<h1 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h1><p>该算法在分类时有个主要的不足是，当样本不平衡时，如一个类的样本容量很大，而其他类样本容量很小时，有可能导致当输入一个新样本时，该样本的K个邻居中大容量类的样本占多数。 该算法只计算“最近的”邻居样本，某一类的样本数量很大，那么或者这类样本并不接近目标样本，或者这类样本很靠近目标样本。无论怎样，数量并不能影响运行结果。</p>
<p>该方法的另一个不足之处是计算量较大，因为对每一个待分类的文本都要计算它到全体已知样本的距离，才能求得它的K个最近邻点。</p>
<h1 id="核心公式"><a href="#核心公式" class="headerlink" title="核心公式"></a>核心公式</h1><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span>  Counter</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KNNClass</span>:</span></span><br><span class="line">    <span class="comment">## 构造时传入K即比较周围的K个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,k)</span>:</span></span><br><span class="line">        self.k=k</span><br><span class="line">        self._X_train=<span class="literal">None</span></span><br><span class="line">        self._Y_train=<span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">## 训练模型，传入特征与结果，要求其个数必须一样，我未加判断    </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self,X_train,Y_train)</span>:</span></span><br><span class="line">        self._X_train=X_train</span><br><span class="line">        self._Y_train=Y_train</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">	</span><br><span class="line">    <span class="comment">## 传入要推断的模型（可以多个），返回推断的结果</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self,X_predict)</span>:</span></span><br><span class="line">        <span class="comment">## 调用_predict方法，测试模型空间中的每一个</span></span><br><span class="line">        y_predict=[self._predict(x) <span class="keyword">for</span> x <span class="keyword">in</span> X_predict]</span><br><span class="line">        <span class="keyword">return</span> y_predict</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_predict</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        <span class="comment">## 计算传入的一个模型的结果</span></span><br><span class="line">        <span class="comment">## 计算所有训练模型和传入模型的距离</span></span><br><span class="line">        distances =[sqrt(np.sum((x_train - x)**<span class="number">2</span>) )<span class="keyword">for</span> x_train <span class="keyword">in</span> self._X_train]</span><br><span class="line">        <span class="comment">## 排序下标</span></span><br><span class="line">        nearest = np.argsort(distances)</span><br><span class="line">        <span class="comment">## 取前K个元素（距离最短）</span></span><br><span class="line">        topK_y=[self._Y_train[i] <span class="keyword">for</span> i <span class="keyword">in</span> nearest[:self.k]]</span><br><span class="line">        <span class="comment">## 统计最短的元素的各类个数</span></span><br><span class="line">        votes = Counter(topK_y)</span><br><span class="line">        <span class="comment">## 返回最多的那个为结果</span></span><br><span class="line">        <span class="keyword">return</span> votes.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"KNN(k=%d)"</span> %self.k</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>maven资源文件不配置</title>
    <url>/2020/01/20/maven%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%8D%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>maven项目在运行时非resources目录下的资源文件不配置</p>
<p>在pom.xml文件中添加如下配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使xml文件也可以加入target目录</p>
<p><img src="https://image.wmgx.top/img/20200120150402.png" alt=""></p>
]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>bug</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis续</title>
    <url>/2020/01/20/Mybatis%E7%BB%AD/</url>
    <content><![CDATA[<h1 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h1><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p><strong>依序</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境 变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure>
<h3 id="properties优化"><a href="#properties优化" class="headerlink" title="properties优化"></a>properties优化</h3><p>可以通过properties属性来实现引用配置文件</p>
<p><strong>db.properties</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">driver=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql://localhost:3306/库名?</span><br><span class="line">useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">username=用户名</span><br><span class="line">password=密码</span><br></pre></td></tr></table></figure>
<p>引入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"db.properties"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"配置文件中没有的参数的名字"</span> <span class="attr">value</span>=<span class="string">"值"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>可以增加文件中没有的值</li>
<li>当都有的时候，以外部文件位置为准</li>
</ul>
<h2 id="typeAliases"><a href="#typeAliases" class="headerlink" title="typeAliases"></a>typeAliases</h2><p>给长的名字设置一个短的名字，方便易用</p>
<h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"top.wmgx.pojo.User"</span> <span class="attr">alias</span>=<span class="string">"User"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在用的时候可以不写那一大长串，直接写User就可以了</p>
<h3 id="直接指定包名"><a href="#直接指定包名" class="headerlink" title="直接指定包名"></a>直接指定包名</h3><p>当一个包下的所有实体类都要起别名，可以直接指定一个包，默认的别名是类名，<strong>首字母小写</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.wmgx.pojo"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果此种方法下想要自定义别名，可以通过注解的方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Alias</span>(<span class="string">"别名"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YourClass</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="STDOUT-LOGGING（标准日志）"><a href="#STDOUT-LOGGING（标准日志）" class="headerlink" title="STDOUT_LOGGING（标准日志）"></a>STDOUT_LOGGING（标准日志）</h3><p>直接在配置文件中配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Log4j"><a href="#Log4j" class="headerlink" title="Log4j"></a>Log4j</h3><ol>
<li><p>导入log4j的包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置log4j的配置文件</p>
<p>log4j.properties</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">log4j.rootLogger=debug, stdout, R</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line"># Pattern to output the caller's file name and line number.</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n</span><br><span class="line">log4j.appender.R=org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.R.File=example.log</span><br><span class="line">log4j.appender.R.MaxFileSize=100KB</span><br><span class="line"># Keep one backup file</span><br><span class="line">log4j.appender.R.MaxBackupIndex=5</span><br><span class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"LOG4J"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="属性名和字段名不一致"><a href="#属性名和字段名不一致" class="headerlink" title="属性名和字段名不一致"></a>属性名和字段名不一致</h1><ol>
<li><p>select 语句中起别名</p>
</li>
<li><p>resultMap</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--结果集映射--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"UserMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"pwd"</span> <span class="attr">property</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserById"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">    /*定义sql*/</span><br><span class="line">    select * from mybatis.user where id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>一致的可以省略不写</p>
</li>
</ol>
<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><h2 id="使用Limit分页"><a href="#使用Limit分页" class="headerlink" title="使用Limit分页"></a>使用Limit分页</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> startIndex,pageSize; <span class="comment">#startIndex 从0开始</span></span><br></pre></td></tr></table></figure>
<p>可以传入一个Map几何，其中包含startindex和pageSize即可</p>
<ol>
<li><p>接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByLimit</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Mapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByLimit"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">    select * from mybatis.user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Map中的key-value可以像属性一样直接用</p>
</li>
<li><p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByLimit</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"startIndex"</span>,<span class="number">0</span>);</span><br><span class="line">    map.put(<span class="string">"pageSize"</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserByLimit(map);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="RowBounds分页"><a href="#RowBounds分页" class="headerlink" title="RowBounds分页"></a>RowBounds分页</h2><ol>
<li><p>接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByRowBounds</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Mapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByRowBounds"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">    select * from mybatis.user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByRowBounds</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">//RowBounds实现</span></span><br><span class="line">    RowBounds rowBounds = <span class="keyword">new</span> RowBounds(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//通过java代码层面实现分页</span></span><br><span class="line">    List&lt;User&gt; userList = sqlSession.selectList(<span class="string">"top.wmgx.Dao.UserMapper.getUserByRowBounds"</span>,<span class="keyword">null</span>,rowBounds);</span><br><span class="line"></span><br><span class="line">    System.out.println(userList);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="注解开发"><a href="#注解开发" class="headerlink" title="注解开发"></a>注解开发</h1><ol>
<li><p>接口</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Select</span>(value = <span class="string">"select * from user"</span>)</span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//若存在多个参数，则需要@Param("参数名")注解</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125; or name = #&#123;name&#125;"</span>)</span><br><span class="line"><span class="function">User <span class="title">getUserByID</span><span class="params">(@Param(<span class="string">"id"</span>)</span><span class="keyword">int</span> id,@<span class="title">Param</span><span class="params">(<span class="string">"name"</span>)</span>String name)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>绑定接口</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"top.wmgx.Dao.UserMapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><p>本质：反射机制实现</p>
</li>
<li><p>底层：动态代理！</p>
</li>
</ul>
<p>@Param</p>
<ul>
<li>基本类型的参数或者String类型，需要加上</li>
<li>引用类型不需要加</li>
<li>如果只有一个基本类型的话，可以忽略</li>
<li>我们在SQL中引用的就是我们这里的@Param()中设定的属性名</li>
</ul>
<h3 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h3><p>使用步骤</p>
<ol>
<li><p>安装插件</p>
</li>
<li><p>导入jar包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span>:无参构造，get、set、toSring、hashcode、equals</span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br></pre></td></tr></table></figure>
<h1 id="一对多，多对一（属性中为集合或者引用数据类型）"><a href="#一对多，多对一（属性中为集合或者引用数据类型）" class="headerlink" title="一对多，多对一（属性中为集合或者引用数据类型）"></a>一对多，多对一（属性中为集合或者引用数据类型）</h1><h2 id="按查询嵌套处理（多对一）"><a href="#按查询嵌套处理（多对一）" class="headerlink" title="按查询嵌套处理（多对一）"></a>按查询嵌套处理（多对一）</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">    1、查询所有的学生信息</span></span><br><span class="line"><span class="comment">    2、根据查询出来的学生的id的tid，寻找对应的老师！ -子查询</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudent"</span> <span class="attr">resultMap</span>=<span class="string">"StudentTeacher"</span>&gt;</span></span><br><span class="line">	select * from student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentTeacher"</span> <span class="attr">type</span>=<span class="string">"top.wmgx.pojo.Student"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--复杂的属性，我们需要单独处理  对象：association  集合：collection--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teacher"</span> <span class="attr">column</span>=<span class="string">"tid"</span> <span class="attr">javaType</span>=<span class="string">"top.wmgx.pojo.Teacher"</span> <span class="attr">select</span>=<span class="string">"getTeacher"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.Teacher"</span>&gt;</span></span><br><span class="line">    select * from teacher where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="按照结果嵌套处理（多对一）"><a href="#按照结果嵌套处理（多对一）" class="headerlink" title="按照结果嵌套处理（多对一）"></a>按照结果嵌套处理（多对一）</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--按照结果嵌套处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudent2"</span> <span class="attr">resultMap</span>=<span class="string">"StudentTeacher2"</span>&gt;</span></span><br><span class="line">    select s.id sid,s.name sname,t.name tname,t.id tid</span><br><span class="line">    from student s,teacher t</span><br><span class="line">    where s.tid=t.id;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentTeacher2"</span> <span class="attr">type</span>=<span class="string">"top.wmgx.pojo.Student"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teacher"</span> <span class="attr">javaType</span>=<span class="string">"top.wmgx.pojo.Teacher"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"tid"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"tname"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="按查询嵌套处理（多对一）-1"><a href="#按查询嵌套处理（多对一）-1" class="headerlink" title="按查询嵌套处理（多对一）"></a>按查询嵌套处理（多对一）</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher2"</span> <span class="attr">resultMap</span>=<span class="string">"TeacherStudent2"</span>&gt;</span></span><br><span class="line">    select * from teacher where id = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"TeacherStudent2"</span> <span class="attr">type</span>=<span class="string">"top.wmgx.pojo.Teacher"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">javaType</span>=<span class="string">"ArrayList"</span> <span class="attr">ofType</span>=<span class="string">"top.wmgx.pojo.Student"</span> <span class="attr">select</span>=<span class="string">"getStudentByTeacherId"</span> <span class="attr">column</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudentByTeacherId"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.Student"</span>&gt;</span></span><br><span class="line">    select * from mybatis.student where tid = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="按照结果嵌套处理-一对多"><a href="#按照结果嵌套处理-一对多" class="headerlink" title="按照结果嵌套处理(一对多)"></a>按照结果嵌套处理(一对多)</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--按结果嵌套查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher"</span> <span class="attr">resultMap</span>=<span class="string">"TeacherStudent"</span>&gt;</span></span><br><span class="line">    select s.id sid,s.name sname,t.name tname,t.id tid</span><br><span class="line">    from student s,teacher t</span><br><span class="line">    where s.tid=t.id and t.id = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"TeacherStudent"</span> <span class="attr">type</span>=<span class="string">"top.wmgx.pojo.Teacher"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"tid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"tname"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--复杂的属性，我们需要单独处理  对象：association  集合：collection</span></span><br><span class="line"><span class="comment">        javaType="" 指定属性的类型</span></span><br><span class="line"><span class="comment">        集合中的泛型信息，我们使用ofType获取</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">ofType</span>=<span class="string">"top.wmgx.pojo.Student"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"tid"</span> <span class="attr">column</span>=<span class="string">"tid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>javaType：JavaType用来指定实体类中属性的类型</p>
<p>ofType：用来指定映射到List或者集合中的pojo类型，泛型中的约束类型！</p>
<h1 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h1><p>动态SQL就是指根据不同的条件生成不同的SQL语句**</p>
<ul>
<li>if</li>
<li>choose (when, otherwise)</li>
<li>trim (where, set)</li>
<li>foreach</li>
</ul>
<h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogIF"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.Blog"</span>&gt;</span></span><br><span class="line">    select * from bolg where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">        and title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="trim-where"><a href="#trim-where" class="headerlink" title="trim ,where"></a>trim ,where</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">select * from mybatis.bolg</span><br><span class="line"><span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">    title = #&#123;title&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">    and author = #&#123;author&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="trim-set"><a href="#trim-set" class="headerlink" title="trim, set"></a>trim, set</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateBlog"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">    update bolg</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">            author = #&#123;author&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="choose-when-otherwise"><a href="#choose-when-otherwise" class="headerlink" title="choose (when, otherwise)"></a>choose (when, otherwise)</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogChoose"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.Blog"</span>&gt;</span></span><br><span class="line">    select * from bolg</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"author!=null"</span>&gt;</span></span><br><span class="line">                and author = #&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and views = #&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="SQL片段"><a href="#SQL片段" class="headerlink" title="SQL片段"></a>SQL片段</h2><ol>
<li><p>使用SQL标签抽取公共的部分</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"if-title-author"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">        title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在需要使用的地方使用Include标签引用即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogIF"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.Blog"</span>&gt;</span></span><br><span class="line">    select * from mybatis.bolg</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"if-title-author"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Foreach"><a href="#Foreach" class="headerlink" title="Foreach"></a>Foreach</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">select * from user where id in</span><br><span class="line">	<span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">collection</span>=<span class="string">"ids"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">sparator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span> &gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>学习视频<a href="https://www.bilibili.com/video/av69742084">https://www.bilibili.com/video/av69742084</a></p>
</blockquote>
]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>java</tag>
        <tag>数据库</tag>
        <tag>SSM</tag>
      </tags>
  </entry>
  <entry>
    <title>第一个mybatis</title>
    <url>/2020/01/20/%E7%AC%AC%E4%B8%80%E4%B8%AAmybatis/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul>
<li><p>Maven仓库</p>
</li>
<li><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li></li>
<li><p>github：<a href="https://github.com/mybatis/mybatis-3/releases">https://github.com/mybatis/mybatis-3/releases</a></p>
</li>
<li><p>中文文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></p>
</li>
</ul>
<h1 id="1-建立一个maven项目"><a href="#1-建立一个maven项目" class="headerlink" title="1. 建立一个maven项目"></a>1. 建立一个maven项目</h1><h1 id="2-导入jdbc-mybatis-和-junit"><a href="#2-导入jdbc-mybatis-和-junit" class="headerlink" title="2. 导入jdbc mybatis 和 junit"></a>2. 导入jdbc mybatis 和 junit</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="3-在src-main-resources中建立mybatis-config-xml文件"><a href="#3-在src-main-resources中建立mybatis-config-xml文件" class="headerlink" title="3. 在src/main/resources中建立mybatis-config.xml文件"></a>3. 在src/main/resources中建立mybatis-config.xml文件</h1><p>mybatis-config.xml文件名随意</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">  "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="4-编写-SqlSessionFactory（固定写法）"><a href="#4-编写-SqlSessionFactory（固定写法）" class="headerlink" title="4.编写  SqlSessionFactory（固定写法）"></a>4.编写  SqlSessionFactory（固定写法）</h1><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String resource = <span class="string">"org/mybatis/example/mybatis-config.xml"</span>;</span><br><span class="line">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure>
<h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.util;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String resource = <span class="string">"mybatis_config.xml"</span>; <span class="comment">//前面的配置文件名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> InputStream inputStream;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream= Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory=<span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="5-编写代码"><a href="#5-编写代码" class="headerlink" title="5. 编写代码"></a>5. 编写代码</h1><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p>实体类设置Getter Setter方法，其中的属性与数据库一致</p>
<h2 id="Mapper实现接口（DAO）"><a href="#Mapper实现接口（DAO）" class="headerlink" title="Mapper实现接口（DAO）"></a>Mapper实现接口（DAO）</h2><h3 id="建立mappe接口"><a href="#建立mappe接口" class="headerlink" title="建立mappe接口"></a>建立mappe接口</h3><p>和DAO一样</p>
<h3 id="建立配置文件（同目录）"><a href="#建立配置文件（同目录）" class="headerlink" title="建立配置文件（同目录）"></a>建立配置文件（同目录）</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;!--绑定对应的mapper接口--&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"top.wmgx.mapper.UserMapper"</span>&gt;</span><br><span class="line">&lt;!--    id为绑定接口的方法--&gt;</span><br><span class="line">&lt;!--    resultType为返回类型的实体类型(写全路径)--&gt;</span><br><span class="line">    &lt;select id=<span class="string">"getUserList"</span> resultType=<span class="string">"top.wmgx.pojo.User"</span>&gt;</span><br><span class="line">        select * from user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>
<p>namespace中文意思：命名空间，作用如下：</p>
<ol>
<li>namespace和子元素的id联合保证唯一 , 区别不同的mapper</li>
<li>绑定DAO接口<ul>
<li>namespace的命名必须跟某个接口同名</li>
<li>接口中的方法与映射文件中sql语句id应该一一对应</li>
</ul>
</li>
<li>namespace命名规则 : 包名+类名</li>
</ol>
<h2 id="在mybatis-config-xml中添加此接口的映射"><a href="#在mybatis-config-xml中添加此接口的映射" class="headerlink" title="在mybatis-config.xml中添加此接口的映射"></a>在mybatis-config.xml中添加此接口的映射</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"top/wmgx/mapper/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">使用映射器接口实现类的完全限定类名</span></span><br><span class="line"><span class="comment">需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"top.wmgx.mapper.UserMapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">将包内的映射器接口实现全部注册为映射器</span></span><br><span class="line"><span class="comment">但是需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.wmgx.mapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.wmgx.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> top.wmgx.pojo.User;</span><br><span class="line"><span class="keyword">import</span> top.wmgx.util.MybatisUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession= (SqlSession) MybatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//执行SQL</span></span><br><span class="line">        UserMapper mapper =sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; user=mapper.getUserList();</span><br><span class="line">        System.out.printf(user.toString());</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="6-CRUD"><a href="#6-CRUD" class="headerlink" title="6. CRUD"></a>6. CRUD</h1><h2 id="6-1-namespace"><a href="#6-1-namespace" class="headerlink" title="6.1 namespace"></a>6.1 namespace</h2><p>namespace中的包名要与mapper（Dao）接口中的包名一致</p>
<h2 id="6-2-select"><a href="#6-2-select" class="headerlink" title="6.2 select"></a>6.2 select</h2><h3 id="选择查询："><a href="#选择查询：" class="headerlink" title="选择查询："></a>选择查询：</h3><ul>
<li>id：实现的方法</li>
<li>resultType 返回值类型</li>
<li>parameterType: 参数类型</li>
</ul>
<ol>
<li><p>编写接口</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">User <span class="title">getUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUser"</span> <span class="attr">resultType</span>=<span class="string">"top.wmgx.pojo.User"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        select * from user where id =#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="6-3-Insert"><a href="#6-3-Insert" class="headerlink" title="6.3 Insert"></a>6.3 Insert</h2><ul>
<li>需要用commit提交才可生效</li>
</ul>
<ol>
<li><p>编写接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"top.wmgx.pojo.User"</span>&gt;</span></span><br><span class="line">        insert into user (id,name,pwd) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUserTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession= (SqlSession) MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper =sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        User u = <span class="keyword">new</span> User(<span class="number">4</span>,<span class="string">"abc"</span>,<span class="string">"12345"</span>);</span><br><span class="line">        mapper.addUser(u);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">    	sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="6-4-Update"><a href="#6-4-Update" class="headerlink" title="6.4 Update"></a>6.4 Update</h2><ul>
<li>需要用commit提交才可生效</li>
</ul>
<ol>
<li><p>编写接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"top.wmgx.pojo.User"</span>&gt;</span></span><br><span class="line">        update user set name= #&#123;name&#125;,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUserTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession= (SqlSession) MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper =sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        User u = <span class="keyword">new</span> User(<span class="number">4</span>,<span class="string">"eas"</span>,<span class="string">"54321"</span>);</span><br><span class="line">        mapper.addUser(u);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="6-5-Delete"><a href="#6-5-Delete" class="headerlink" title="6.5 Delete"></a>6.5 Delete</h2><ul>
<li>需要用commit提交才可生效</li>
</ul>
<ol>
<li><p>编写接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        delete  from user where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>学习视频<a href="https://www.bilibili.com/video/av69742084">https://www.bilibili.com/video/av69742084</a></p>
</blockquote>
]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>java</tag>
        <tag>数据库</tag>
        <tag>SSM</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下mongoDB 错误1053 服务无法启动 </title>
    <url>/2019/10/29/windows%E4%B8%8BmongoDB-%E9%94%99%E8%AF%AF1053-%E6%9C%8D%E5%8A%A1%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<p>windows 安装完mongodb并配置好后启动服务时报错：</p>
<p><img src="http://image.wmgx.top/img/20191029090541.png" alt=""></p>
<p>显示这个错误</p>
<p>在服务窗口中查看</p>
<p><img src="https://image.wmgx.top/img/20191030003727.png" alt=""></p>
<p><img src="https://image.wmgx.top/img/20191030004204.png" alt=""></p>
<p>复制所选的命令，在<code>powersell(管理员)</code>中执行 查看结果</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; E:\mongdb\bin\mongod.exe --config "E:\mongdb\bin\mongod.cfg" --service</span><br><span class="line">Unrecognized option: snmp</span><br></pre></td></tr></table></figure>
<p>我显示无效的参数snmp</p>
<p>查看配置文件，显示：</p>
<p><img src="https://image.wmgx.top/img/20191030004602.png" alt=""></p>
<p>下面多了一行snmp:</p>
<p>删除后再执行显示正常了就</p>
]]></content>
      <categories>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>mongoDB 踩坑记录</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery</title>
    <url>/2019/09/19/2019-09-19-jQuery/</url>
    <content><![CDATA[<h1 id="语法结构"><a href="#语法结构" class="headerlink" title="语法结构"></a>语法结构</h1><h2 id="工厂函数"><a href="#工厂函数" class="headerlink" title="工厂函数"></a>工厂函数</h2><p><strong>$()</strong></p>
<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="Id选择器"><a href="#Id选择器" class="headerlink" title="Id选择器"></a>Id选择器</h3><p><strong>$(“#Name)</strong></p>
<p>返回DOM中ID名为Name的元素</p>
<h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><p><strong>$(“p”)</strong></p>
<p>返回DOM中所有的p元素</p>
<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p><strong>$(“.className”)</strong></p>
<p>返回DOM中class类名为className的元素</p>
<h2 id="事件处理方法"><a href="#事件处理方法" class="headerlink" title="事件处理方法"></a>事件处理方法</h2><p>可以绑定 <strong>鼠标事件（click）</strong>、<strong>键盘事件（mouseover）</strong>、和 <strong>表单事件(onblur)</strong>等</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>当点击导航项时，ID为 <strong>current</strong> 的导航项添加 <strong>class</strong>为 <strong>current</strong>的样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">		li&#123;</span><br><span class="line">			list-style: none;</span><br><span class="line">			line-height: 24px;</span><br><span class="line">			cursor: pointer;</span><br><span class="line">		&#125;</span><br><span class="line">		.current&#123;</span><br><span class="line">			background-color: red;</span><br><span class="line">			font-weight: blod;</span><br><span class="line">			color: #fff;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">		$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			$(<span class="string">"li"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				$(<span class="string">"#current"</span>).addClass(<span class="string">"current"</span>)</span></span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"current"</span>&gt;</span>方法<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>语法<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>对象<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>事件<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190919000553.png" alt=""></p>
<h3 id="addClass"><a href="#addClass" class="headerlink" title="addClass"></a>addClass</h3><p><strong>addClass()</strong> 是<strong>JQuery</strong>中用于进行<strong>CSS</strong>操作的方法之一，作用的为每个匹配的元素<strong>添加指定的样式类名</strong>。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
        <tag>网页</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>数字电子技术基础笔记1</title>
    <url>/2019/09/11/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<h1 id="数值转换"><a href="#数值转换" class="headerlink" title="数值转换"></a>数值转换</h1><p>太简单了，不写了</p>
<h1 id="常见编码"><a href="#常见编码" class="headerlink" title="常见编码"></a>常见编码</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">编码种类<br />十进制数</th>
<th style="text-align:center">8421码（BCD代码）</th>
<th style="text-align:center">余3码</th>
<th style="text-align:center">2421码</th>
<th style="text-align:center">5211码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0000</td>
<td style="text-align:center">0011</td>
<td style="text-align:center">0000</td>
<td style="text-align:center">0000</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0001</td>
<td style="text-align:center">0100</td>
<td style="text-align:center">0001</td>
<td style="text-align:center">0001</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">0010</td>
<td style="text-align:center">0101</td>
<td style="text-align:center">0010</td>
<td style="text-align:center">0100</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">0011</td>
<td style="text-align:center">0110</td>
<td style="text-align:center">0011</td>
<td style="text-align:center">0101</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">0100</td>
<td style="text-align:center">0111</td>
<td style="text-align:center">0100</td>
<td style="text-align:center">0111</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">0101</td>
<td style="text-align:center">1000</td>
<td style="text-align:center">1011</td>
<td style="text-align:center">1000</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">0110</td>
<td style="text-align:center">1001</td>
<td style="text-align:center">1100</td>
<td style="text-align:center">1001</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">0111</td>
<td style="text-align:center">1010</td>
<td style="text-align:center">1101</td>
<td style="text-align:center">1100</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">1000</td>
<td style="text-align:center">1011</td>
<td style="text-align:center">1110</td>
<td style="text-align:center">1101</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">1001</td>
<td style="text-align:center">1100</td>
<td style="text-align:center">1111</td>
<td style="text-align:center">1111</td>
</tr>
</tbody>
</table>
</div>
<h2 id="8421"><a href="#8421" class="headerlink" title="8421"></a>8421</h2><p>8421又称BCD码，是最常用的一种表示，每一位对应的权值就是8421，每一位的权是固定不变的，属于恒权码。</p>
<h2 id="余3码"><a href="#余3码" class="headerlink" title="余3码"></a>余3码</h2><p>每一位在BCD代码的基础上加上 <strong>011</strong>（即3）得到的就是余3码。</p>
<p>余3码的0和9，1和9，2和8……互为反码。</p>
<p>余3码不是恒权码，因为如果试图将每个代码看作二进制数，并使它等效的十进制数与所表示的代码相等，那么代码中每一位的1所代表的十进制数在各个代码中是不固定的。</p>
<h2 id="2421码"><a href="#2421码" class="headerlink" title="2421码"></a>2421码</h2><p>同余3码一样，0和9，1和9，2和8……互为反码。</p>
<p>当2421是恒权码。</p>
<h2 id="5211码"><a href="#5211码" class="headerlink" title="5211码"></a>5211码</h2><p>5211是另一种恒权码，（在第六章学习，待补充……）</p>
<h1 id="格雷码"><a href="#格雷码" class="headerlink" title="格雷码"></a>格雷码</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">十进制数</th>
<th style="text-align:left">二进制码</th>
<th style="text-align:left">格雷码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">0</td>
<td style="text-align:left">0000</td>
<td style="text-align:left">0000</td>
</tr>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0001</td>
<td style="text-align:left">0001</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">0010</td>
<td style="text-align:left">0011</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">0011</td>
<td style="text-align:left">0010</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0100</td>
<td style="text-align:left">0110</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0101</td>
<td style="text-align:left">0111</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">0110</td>
<td style="text-align:left">0101</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">0111</td>
<td style="text-align:left">0100</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">1000</td>
<td style="text-align:left">1100</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">1001</td>
<td style="text-align:left">1101</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">1010</td>
<td style="text-align:left">1111</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">1011</td>
<td style="text-align:left">1110</td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">1100</td>
<td style="text-align:left">1010</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">1101</td>
<td style="text-align:left">1011</td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">1110</td>
<td style="text-align:left">1001</td>
</tr>
<tr>
<td style="text-align:left">15</td>
<td style="text-align:left">1111</td>
<td style="text-align:left">1000</td>
</tr>
</tbody>
</table>
</div>
<p><strong>格雷码的相邻两个代码之间变化时，只有一位发生变化。</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>g1g0<br />g3g2</th>
<th>00</th>
<th>01</th>
<th>10</th>
<th>11</th>
</tr>
</thead>
<tbody>
<tr>
<td>00</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td>01</td>
<td>7</td>
<td>6</td>
<td>5</td>
<td>4</td>
</tr>
<tr>
<td>10</td>
<td>8</td>
<td>9</td>
<td>10</td>
<td>11</td>
</tr>
<tr>
<td>11</td>
<td>15</td>
<td>14</td>
<td>13</td>
<td>12</td>
</tr>
</tbody>
</table>
</div>
<h1 id="逻辑代数中的三种基本运算"><a href="#逻辑代数中的三种基本运算" class="headerlink" title="逻辑代数中的三种基本运算"></a>逻辑代数中的三种基本运算</h1><h2 id="与"><a href="#与" class="headerlink" title="与"></a>与</h2><h3 id="真值表"><a href="#真值表" class="headerlink" title="真值表"></a>真值表</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">A</th>
<th style="text-align:center">B</th>
<th style="text-align:center">Y</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
</div>
<h3 id="符号表示"><a href="#符号表示" class="headerlink" title="符号表示"></a>符号表示</h3><p>逻辑代数中与以 “<strong>·</strong>”表示</p>
<h3 id="图形表示"><a href="#图形表示" class="headerlink" title="图形表示"></a>图形表示</h3><p><img src="http://image.wmgx.top/img/20190910230216.png" alt=""></p>
<h2 id="或"><a href="#或" class="headerlink" title="或"></a>或</h2><h3 id="真值表-1"><a href="#真值表-1" class="headerlink" title="真值表"></a>真值表</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">A</th>
<th style="text-align:center">B</th>
<th style="text-align:center">Y</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
</div>
<h3 id="符号表示-1"><a href="#符号表示-1" class="headerlink" title="符号表示"></a>符号表示</h3><p>逻辑代数中与以 “<strong>+</strong>”表示</p>
<h3 id="图形表示-1"><a href="#图形表示-1" class="headerlink" title="图形表示"></a>图形表示</h3><p><img src="http://image.wmgx.top/img/20190910230356.png" alt=""></p>
<h2 id="非"><a href="#非" class="headerlink" title="非"></a>非</h2><h3 id="真值表-2"><a href="#真值表-2" class="headerlink" title="真值表"></a>真值表</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">A</th>
<th style="text-align:center">Y</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
</div>
<h3 id="符号表示-2"><a href="#符号表示-2" class="headerlink" title="符号表示"></a>符号表示</h3><p>逻辑代数中与以 “$\overline{A}<br>$”表示</p>
<h3 id="图形表示-2"><a href="#图形表示-2" class="headerlink" title="图形表示"></a>图形表示</h3><p><img src="http://image.wmgx.top/img/20190910230433.png" alt=""></p>
]]></content>
      <categories>
        <category>数字电子技术基础笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数字电子技术基础</tag>
      </tags>
  </entry>
  <entry>
    <title>自建云盘cloudreve</title>
    <url>/2019/08/27/%E9%83%A8%E7%BD%B2cloudreve/</url>
    <content><![CDATA[<p>想搭建一个云盘，虽然我也不知道为什么，之前搭建过一个nextcloud，很不错，除了速度（因为阿里云ECS学生套餐下行带宽只有2M），忽然发现cloudreve可以直接连接阿里云的oss，就想试试。</p>
<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ul>
<li>快速对接多家云存储，支持七牛、又拍云、阿里云OSS、AWS S3、Onedrive、自建远程服务器，当然，还有本地存储</li>
<li>可限制单文件最大大小、MIMEType、文件后缀、用户可用容量</li>
<li>自定义主题配色</li>
<li>基于Aria2的离线下载</li>
<li>图片、音频、视频、文本、Markdown、Ofiice文档 在线预览</li>
<li>移动端全站响应式布局</li>
<li>文件、目录分享系统，可创建私有分享或公开分享链接</li>
<li>用户个人主页，可查看用户所有分享</li>
<li>多用户系统、用户组支持</li>
<li>初步完善的后台，方便管理</li>
<li>拖拽上传、分片上传、断点续传、下载限速（*实验性功能）</li>
<li>多上传策略，可为不同用户组分配不同策略</li>
<li>用户组基础权限设置、二步验证</li>
<li>WebDAV协议支持</li>
</ul>
<h1 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h1><ul>
<li>LNMP/AMP With PHP5.6+</li>
<li>curl、fileinfo、gd扩展</li>
<li>Composer</li>
</ul>
<h1 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h1><p>因为Cloudreve使用Composer实现快捷的安装与配置，解压就可以用，所以我也不想麻烦了</p>
<p><a href="https://cloudreve.org/">官网</a> 可以直接下载zip文件，解压成文件夹就可以了（<a href="https://github.com/cloudreve/Cloudreve">github</a>）</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="添加站点"><a href="#添加站点" class="headerlink" title="添加站点"></a>添加站点</h2><p>因为使用宝塔面板，所以配置十分简单 </p>
<p><img src="http://image.wmgx.top/img/20190826212721.png" alt=""></p>
<p>点击网站，添加站点</p>
<p><img src="部署cloudreve/1566826131490.png" alt="1566826131490"></p>
<p>设置域名，根目录设置成刚才解压的文件夹就行了</p>
<p>访问<a href="http://你的域名/CloudreveInstaller/">http://你的域名/CloudreveInstaller/</a> 进入配置界面</p>
<h3 id="配置伪静态"><a href="#配置伪静态" class="headerlink" title="配置伪静态"></a>配置伪静态</h3><p>如果提示 <code>2 URL Rewrite</code></p>
<p><img src="http://image.wmgx.top/img/20190826213632.png" alt=""></p>
<p> 对于Nginx,需要配置一下伪静态</p>
<p><img src="http://image.wmgx.top/img/20190826213247.png" alt=""></p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    if (!-e <span class="formula">$request_filename) &#123;</span></span><br><span class="line"><span class="formula">        rewrite ^(.*)$</span> /index.php?s=/<span class="formula">$1 last;</span></span><br><span class="line"><span class="formula">        break;</span></span><br><span class="line"><span class="formula">    &#125;</span></span><br><span class="line"><span class="formula">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="设置读写权限"><a href="#设置读写权限" class="headerlink" title="设置读写权限"></a>设置读写权限</h3><p><img src="http://image.wmgx.top/img/20190826213905.png" alt=""></p>
<p><code>chomod a+w dirname</code></p>
<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p> 如果少扩展去宝塔里面安装就行</p>
<h3 id="最后两项"><a href="#最后两项" class="headerlink" title="最后两项"></a>最后两项</h3><p>不用管</p>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>在宝塔中创建一个数据库，这里直接写下刚才创建的各种信息就行</p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>完成后会出现这个页面，你的管理界面和账户密码（进入管理员账户可以修改）</p>
<p><img src="http://image.wmgx.top/img/20190826214632.png" alt=""></p>
<h2 id="OSS上传策略"><a href="#OSS上传策略" class="headerlink" title="OSS上传策略"></a>OSS上传策略</h2><p>进入管理界面, 点击添加</p>
<p><img src="http://image.wmgx.top/img/20190826214849.png" alt=""></p>
<p><img src="http://image.wmgx.top/img/20190826214935.png" alt=""></p>
<p>然后添加信息</p>
<p><img src="http://image.wmgx.top/img/20190826215126.png" alt=""></p>
<h2 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h2><h3 id="空间域名"><a href="#空间域名" class="headerlink" title="空间域名"></a>空间域名</h3><p>虽然他给的是<code>http(s)://</code>但是你要不也<code>http://</code> 要不写<code>https://</code>，你如果直接写http(s)://域名，他会直接访问http(s)://域名，很明显，是没有http(s)协议的，所以oss的上传不会成功</p>
<h3 id="OSS-配置"><a href="#OSS-配置" class="headerlink" title="OSS 配置"></a>OSS 配置</h3><p>需要在你的bucket的基础设置的跨域设置中创建规则</p>
<p><img src="http://image.wmgx.top/img/20190826215556.png" alt=""></p>
<p>规则如下</p>
<p><img src="http://image.wmgx.top/img/20190826215658.png" alt=""></p>
<h1 id="应用上传策略"><a href="#应用上传策略" class="headerlink" title="应用上传策略"></a>应用上传策略</h1><p>可以在用户组中设置用户组的上传策略</p>
<p><img src="http://image.wmgx.top/img/20190826220843.png" alt=""></p>
]]></content>
      <categories>
        <category>捣鼓记录</category>
      </categories>
      <tags>
        <tag>cloudreve</tag>
        <tag>搭建记录</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构-笔记7-二叉搜索树</title>
    <url>/2019/08/19/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%94%E8%AE%B07%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</url>
    <content><![CDATA[<h1 id="搜索树"><a href="#搜索树" class="headerlink" title="搜索树"></a>搜索树</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>搜索树是一种可以进行插入、搜素、删除等操作的数据结构，可以用作字典或优先级队列。二叉搜索树属于最基本的搜索树。</p>
<h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>设x为二叉搜索树的结点，如果y是x左子树的结点，那么y的键值小于等于x的键值。如果z是x的右子树中的结点，那么x的键值小于等于z的键值。</p>
<p><strong>如图所示</strong></p>
<p><img src="http://image.wmgx.top/img/20190819022901.jpg" alt=""></p>
<p>当数据进行插入或者删除操作后，所有结点仍然满足上述的性质。</p>
<h1 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h1><h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><p>insert方法用于在二叉搜索树T中插入新值v，insert 将键值为v，左子树为NIL，右子树为NIL的点z作为实参传入</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">insert(T,z)</span><br><span class="line">    y=NIL <span class="comment">//x的父结点</span></span><br><span class="line">    x='T的根节点'</span><br><span class="line">    <span class="keyword">while</span> x!=NIL</span><br><span class="line">    	y=x <span class="comment">//设置父结点</span></span><br><span class="line">    	<span class="keyword">if</span> z.key &lt; x.key</span><br><span class="line">    		x=x.left</span><br><span class="line">    	<span class="keyword">else</span></span><br><span class="line">    		x=x.right</span><br><span class="line">    z.p=y</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> y==NIL <span class="comment">//T为空时</span></span><br><span class="line">    	 'T的根节点'=z</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> z.key &lt;y.key</span><br><span class="line">    	y.left=z <span class="comment">//将z定为y的左子结点</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    	y.right=z <span class="comment">//将z定为y的右子结点</span></span><br></pre></td></tr></table></figure>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">parent</span>,*<span class="title">left</span>,*<span class="title">right</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>自建图床上传</title>
    <url>/2019/08/19/%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>picgo 不知道为什么很慢，测试的时候感觉应该是剪贴板的问题，因为我的oss(我用的图床是将阿里云的oss作为自己的图床，没什么访问量 ,按量付费也不贵)上已经有文件了，但是迟迟写不到剪贴板中。并且这个时候通知也会卡。picgo调用通知的地方不止一处，应该不是通知的事情。</p>
<p>对于文件的大小也有很大的区别，如果文件很小，传的也不算慢，但是一旦图片大了，就慢了。也不能排除是picgo调用的网络的事情。</p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>因为阿里云的oss有提供命令行的程序，所以写了一个脚本来上传。</p>
<p><a href="https://help.aliyun.com/document_detail/120075.html?spm=a2c4g.11174283.6.681.17cb7da2SRzbLU">下载安装官方文档</a></p>
<p>安装配置完成后可以直接调用上传文件</p>
<p>如果ossutil64没有设置全局，那shell 要放了同一个目录。</p>
<p>要安装 xclip 用以操作剪贴板</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Datetime=$(date "+%Y%m%d%H%M%S")</span><br><span class="line">xclip -selection clipboard -t image/jpg -o &gt; ~/$Datetime.jpg</span><br><span class="line">if  test -s ~/$Datetime.jpg; then</span><br><span class="line">        kdialog --passivepopup $Datetime.jpg保存成功 --title 提示</span><br><span class="line">        ./ossutil64 appendfromfile $Datetime.jpg oss://ossname/img/$Datetime.jpg</span><br><span class="line">        kdialog --passivepopup $Datetime.jpg上传成功 --title 提示</span><br><span class="line">        echo "![](http://yourhost/img/$Datetime.jpg)" | xclip  -selection clipboard    </span><br><span class="line">        kdialog --passivepopup 已拷贝到剪贴板http://yourhost/img/$Datetime.jpg --title 提示</span><br><span class="line">        rm ~/$Datetime.jpg</span><br><span class="line">else</span><br><span class="line">        kdialog --passivepopup 请检查剪贴板是否存在图片 --title 错误</span><br><span class="line">        rm ~/$Datetime.jpg</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><code>Datetime=$(date &quot;+%Y%m%d%H%M%S&quot;)</code>是作为文件名如20190102123212</p>
<p><code>xclip -selection clipboard -t image/jpg -o &gt; ~/$Datetime.jpg</code>导出剪贴板中的图片</p>
<p><code>if  test -s ~/$Datetime.jpg; then</code>查看导出的文件大小是否为0，为0的话说明不是图片</p>
<p><code>kdialog</code>是kde用于弹出通知的，就像这个一样</p>
<p><img src="http://image.wmgx.top/img/20190819004443.jpg" alt=""></p>
<p><code>./ossutil64 appendfromfile $Datetime.jpg oss://ossname/img/$Datetime.jpg</code> 这一行是用于上传图片的</p>
<p><code>echo &quot;![](http://yourhost/img/$Datetime.jpg)&quot; | xclip  -selection clipboard</code> 是将链接拷贝到剪贴板，因为为将oss进行了域名绑定，所以只有后面的文件名不一样，用变量就可以。</p>
<h1 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h1><p>我的本意是将快捷键绑定要这个脚本上，但是，不知道为啥成功不了。</p>
<h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><p>每次调用还是有点麻烦，速度上去了，但是操作多了。</p>
<p>用python 写了一个小的用户界面，点一下调用一次shell(最好还是想办法绑定快捷键)</p>
<p><img src="/home/gx/.config/Typora/typora-user-images/1566147145625.png" alt="1566147145625"></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtWidgets</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(QtWidgets.QMainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self.setWindowTitle(<span class="string">"阿里云oss上传"</span>)</span><br><span class="line">        self.setFixedSize(<span class="number">100</span>,<span class="number">100</span>) <span class="comment"># 设置窗口固定大小</span></span><br><span class="line">        self.main_widget = QtWidgets.QWidget()</span><br><span class="line">        self.main_layout = QtWidgets.QVBoxLayout()</span><br><span class="line">        self.main_widget.setLayout(self.main_layout)</span><br><span class="line">        self.btn_1 = QtWidgets.QPushButton(<span class="string">"上传"</span>)</span><br><span class="line">        self.main_layout.addWidget(self.btn_1)</span><br><span class="line">        self.btn_1.clicked.connect(self.clicks)</span><br><span class="line">        self.setCentralWidget(self.main_widget)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clicks</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">"/home/yourusername/shot.sh"</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    gui = App()</span><br><span class="line">    gui.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>图床</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>我错了！kde还是很不错的</title>
    <url>/2019/08/12/manjarokde%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>我的manjaro用的是dde的桌面，诚然，非常不错，真的非常不错，就是稍微，启动应用程序慢了点，让我真的有一丢丢的无奈。</p>
<p>无奈下我还是尝试了一下kde的manjaro，前面说过，kde，慢！慢！！慢！！！。</p>
<p>kde启动是真的很慢，但是进了桌面，加载完成之后，其实，感觉，还挺好的，包括各种动画啊啥的都设置好了，启动程序说实话比dde启动程序快的好多，而且动画我也很喜欢。</p>
<p>但是还是遇到了一些问题不知道怎么解决。</p>
<ol>
<li><p>全局菜单有时有有时没有，因为先在移动硬盘中装过一个manjaro kde系统，配置运行之后，感觉非常不错，这个全局菜单应该是支持chrome，typora，VScode 等一系列软件的，但是不知道为什么，现在只支持系统原生的了，很奇怪</p>
<p><img src="http://image.wmgx.top/img/20190812010235.png" alt=""></p>
</li>
<li><p>PicGo上传缓慢，在移动硬盘里面的系统运行时都是秒传的，这一点我也不知道为什么</p>
</li>
<li><p>eclipse报了一个冲突的错误，只要打开.java的文件就报错，没办法，我重装了一次系统。</p>
<p>附上我简单配置的桌面，虽然不好看……</p>
</li>
</ol>
<p><img src="https://gxtuchuang.oss-cn-beijing.aliyuncs.com/img/20190812004417.png" alt=""></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>kde</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构 笔记6——树形结构</title>
    <url>/2019/08/10/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%846%EF%BC%9A%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h1><p>树结构是一种数据结构，由节点(node)以及链接节点的边构成(edge)</p>
<h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><p><img src="http://image.wmgx.top/img/20190812024151.png" alt=""></p>
<h4 id="根"><a href="#根" class="headerlink" title="根"></a>根</h4><p>如果一棵树具有一个名为“根”(root)的特殊节点，那么这棵树被叫做有根树(rooted tree)</p>
<h4 id="父结点子结点"><a href="#父结点子结点" class="headerlink" title="父结点子结点"></a>父结点子结点</h4><p>有根树的节点之间具有父子关系。设一棵有根树T，他的根r到结点x的路径上的最后一条边连接结点p与结点x，此时我们将p称为x的父结点(parent)x称为p在子结点(child)</p>
<h4 id="叶"><a href="#叶" class="headerlink" title="叶"></a>叶</h4><p>我们将没有子结点的结点称为 <strong>外部结点</strong> 或者 <strong>叶节点</strong> ，其余称为 <strong>内部结点</strong> 。</p>
<h4 id="度"><a href="#度" class="headerlink" title="度"></a>度</h4><p>结点的子结点个数称为结点的度</p>
<h4 id="深度"><a href="#深度" class="headerlink" title="深度"></a>深度</h4><p>从根到x的路径长度称为x的深度，结点x到叶结点的最大路径长度称为结点x的高。根的高称为 <strong>树高</strong></p>
<h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p>如果一棵树拥有1个根结点，且所有结点的子结点个数都不超过2,那么这棵树称为有根二叉树。</p>
<p><img src="http://image.wmgx.top/img/20190812031029.png" alt=""></p>
<p>在二叉树中，每个结点的子结点数不超过2个，而且有左右结点之分。也就是说，当某个结点只存在一个子结点时，要严格区分是左结点还是右结点。我们将这各子结点有特定顺序的树称为有序树。</p>
<p>二叉树可以递归进行定义。二叉树条件</p>
<ol>
<li>T没有任何结点</li>
<li>T由以下三个顶点集合构成<ol>
<li>根</li>
<li>左子树</li>
<li>右子树</li>
</ol>
</li>
</ol>
<h1 id="有根树的表达"><a href="#有根树的表达" class="headerlink" title="有根树的表达"></a>有根树的表达</h1><p>每个结点u的必要信息</p>
<p>&gt;<br>&gt;</p>
<blockquote>
<ol>
<li>u的结点编号</li>
<li>u的结点种类</li>
<li>u的父结点编号</li>
<li>u的子结点列表</li>
<li>u的深度</li>
</ol>
</blockquote>
<h3 id="左子右兄弟表示法"><a href="#左子右兄弟表示法" class="headerlink" title="左子右兄弟表示法"></a>左子右兄弟表示法</h3><h5 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h5><blockquote>
<ul>
<li>结点u的父结点</li>
<li>结点u的最左子结点</li>
<li>结点u的右侧紧邻兄弟结点</li>
</ul>
</blockquote>
<h5 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span><span class="keyword">int</span> parent,<span class="keyword">int</span> left,<span class="keyword">int</span> right&#125;;</span><br></pre></td></tr></table></figure>
<p>利用u.parent可以得到各结点u的父结点。不存在父结点的为根。</p>
<p>不存在u.left的结点的为叶。</p>
<p>不存在u.right的结点的为最右侧结点</p>
<p><strong>为表示根及左右结点，将NIL作为特殊结点编号。保证NIL不为一般结点使用</strong></p>
<h5 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h5><ul>
<li>深度</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">getDepth(u)</span><br><span class="line">    d=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> T(u).parent!=NIL</span><br><span class="line">    	u=T(u).parent</span><br><span class="line">    	d++</span><br><span class="line">    <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure>
<ul>
<li>深度(递归)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">getDepth(u,p)</span><br><span class="line">    D[u]=p</span><br><span class="line">    <span class="keyword">if</span> T[u].right!=NIL</span><br><span class="line">    	getDepth(T[u].right,p)</span><br><span class="line">    <span class="keyword">if</span> T[u].left!=NIL</span><br><span class="line">    	getDepth(T[u].left,p+<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h3 id="二叉树-1"><a href="#二叉树-1" class="headerlink" title="二叉树"></a>二叉树</h3><h4 id="信息-1"><a href="#信息-1" class="headerlink" title="信息"></a>信息</h4><blockquote>
<ul>
<li>u的父结点</li>
<li>u的左子结点 </li>
<li>u的右子结点</li>
</ul>
</blockquote>
<h4 id="结构-1"><a href="#结构-1" class="headerlink" title="结构"></a>结构</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span><span class="keyword">int</span> parent,left,right&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="高"><a href="#高" class="headerlink" title="高"></a>高</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">setHeight(H,u)</span><br><span class="line">    h1=h2=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span>(Tu).right!=NIL</span><br><span class="line">    	h1=setHeight(H,T[u].right)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(Tu).left!=NIL</span><br><span class="line">    	h2=setHeight(H,T[u].left)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> H[u]=max(h1,h2);</span><br></pre></td></tr></table></figure>
<h4 id="具体表达"><a href="#具体表达" class="headerlink" title="具体表达"></a>具体表达</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NIL -1</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> parent,left,right;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">T</span>[<span class="title">MAX</span>];</span></span><br><span class="line"><span class="keyword">int</span> n,D[MAX],H[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setDepth</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==NIL) <span class="keyword">return</span>;</span><br><span class="line">    D[u]=d;</span><br><span class="line">    setDepth(T[u].left,d+<span class="number">1</span>);</span><br><span class="line">    setDepth(T[u].right,d+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h1=<span class="number">0</span>,h2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(T[u].left!=NIL)</span><br><span class="line">        h1=setHeight(T[u].left)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(T[u].right!=NIL)</span><br><span class="line">        h2=setHeight(T[u].right)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> H[u]=(h1&gt;h2?h1:h2);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回结点u的兄弟结点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSibling</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T[u].parent==NIL) <span class="keyword">return</span> NIL;</span><br><span class="line">    <span class="keyword">if</span>(T[T[u].parent].left!=NIL &amp;&amp; T[T[u].parent].left !=u) </span><br><span class="line">        <span class="keyword">return</span> T[T[u].parent].left;</span><br><span class="line">    <span class="keyword">if</span>(T[T[u].parent].right!=NIL &amp;&amp; T[T[u].parent].right !=u) </span><br><span class="line">        <span class="keyword">return</span> T[T[u].parent].right;</span><br><span class="line">    <span class="keyword">return</span> NIL;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"node %d:"</span>,u);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"parent = %d,"</span>,T[u].parent);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sibling = %d,"</span>,getSibling(u));</span><br><span class="line">    <span class="keyword">int</span> deg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(T[u].left!=NIL) deg++;</span><br><span class="line">    <span class="keyword">if</span>(T[u].right!=NIL) deg++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"degree = %d,"</span>,deg);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"depth = %d"</span>,D[u]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"height = %d"</span>,H[u]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T[u].parent==NIL)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" root\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(T[u].left==NIL &amp;&amp; T[u].right==NIL)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" leaf\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" internal node\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v,l,r,root=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        T[i].parent=NIL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;v,&amp;l,&amp;r);</span><br><span class="line">        T[v].left=l;</span><br><span class="line">        T[v].right=r;</span><br><span class="line">        <span class="keyword">if</span>(l!=NIL) T[l].parent=v;</span><br><span class="line">        <span class="keyword">if</span>(r!=NIL) T[r].parent=v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T[i].parent==NIL) root=i;</span><br><span class="line">    &#125;</span><br><span class="line">    setDepth(root,<span class="number">0</span>);</span><br><span class="line">    setHeight(root);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) print(i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">0 1 4</span><br><span class="line">1 2 3</span><br><span class="line">2 -1 -1</span><br><span class="line">3 -1 -1</span><br><span class="line">4 5 8</span><br><span class="line">5 6 7</span><br><span class="line">6 -1 -1</span><br><span class="line">7 -1 -1</span><br><span class="line">8 -1 -1</span><br></pre></td></tr></table></figure>
<h5 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h5><p><img src="http://image.wmgx.top/img/20190813112650.png" alt=""></p>
<h1 id="树的遍历"><a href="#树的遍历" class="headerlink" title="树的遍历"></a>树的遍历</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h3><p>根节点、左子树、右子树顺序访问</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">preParse(u)</span><br><span class="line">    <span class="keyword">if</span> u == NIL</span><br><span class="line">    	<span class="keyword">return</span></span><br><span class="line">    print u</span><br><span class="line">    preParse(T[u].left)</span><br><span class="line">    preParse(T[u].right)</span><br></pre></td></tr></table></figure>
<h3 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h3><p>左子树、根节点、右子树顺序访问</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">preParse(u)</span><br><span class="line">    <span class="keyword">if</span> u == NIL</span><br><span class="line">    	<span class="keyword">return</span></span><br><span class="line">    preParse(T[u].left)</span><br><span class="line">    print u</span><br><span class="line">    preParse(T[u].right)</span><br></pre></td></tr></table></figure>
<h3 id="后序访问"><a href="#后序访问" class="headerlink" title="后序访问"></a>后序访问</h3><p>左子树、右子树、根节点顺序访问</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">preParse(u)</span><br><span class="line">    <span class="keyword">if</span> u == NIL</span><br><span class="line">    	<span class="keyword">return</span></span><br><span class="line">    preParse(T[u].left)</span><br><span class="line">    preParse(T[u].right)</span><br><span class="line">    print u</span><br></pre></td></tr></table></figure>
<h1 id="子树重建"><a href="#子树重建" class="headerlink" title="子树重建"></a>子树重建</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给出前序遍历和中序遍历，给出后序遍历</p>
<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,pos;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre, in ,post;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> root = pre[pos++];</span><br><span class="line">    <span class="keyword">int</span> m=distance(in.begin(),find(in.begin(),in.end(),root));</span><br><span class="line">    rec(l,m);</span><br><span class="line">    rec(m+<span class="number">1</span>,r);</span><br><span class="line">    post.push_back(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    pos=<span class="number">0</span>;</span><br><span class="line">    rec(<span class="number">0</span>,pre.size());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span>  i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i) <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;post[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        pre.push_back(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        in.push_back(k);</span><br><span class="line">    &#125;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="http://image.wmgx.top/img/20190819021616.jpg" alt=""></p>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
        <tag>树形结构</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构 笔记5——高等排序</title>
    <url>/2019/08/06/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%845%EF%BC%9A%E9%AB%98%E7%AD%89%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h1><p>过程有些复杂，先来张动图掩饰下尴尬。</p>
<p><img src="http://image.wmgx.top/img/20190806020435.png" alt=""></p>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol>
<li>将给定的包含n个元素的局部数“分割”成两个局部数组，每个数组各包含$\frac{n}{2}$个元素。（Divide）</li>
<li>对连个局部数组分别执行 mergeSort(归并)排序。(Solve)</li>
<li>通过merge将连个已经排序完成的数组“整合”成一个数组。(Conquer)</li>
</ol>
<h2 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h2><p>对于merge过程，可以利用已经排好序的前提条件，执行$O(n1+n2)$的算法进行整合。在左半部分（L）和右半部分（R）的末尾分别安插一个 <strong>大于所有元素的标记</strong>。在比较L、R的元素过程中，只要标记设计的足够大，切将比较次数控制在$n1+n2$($right-left$)之内，就可以防止两个标记相比较。</p>
<h2 id="mergeSort"><a href="#mergeSort" class="headerlink" title="mergeSort"></a>mergeSort</h2><p>mergeSort 过程中，如果局部数组只剩下一个元素时，mergeSort不做任何处理直接结束。如果不是，则计算局部数组的中央位置mid，将left到mid (不包含) 视作前半部分，mid到right(不包含)视作后半部分。递归套用mergeSort</p>
<h2 id="过程实现流程"><a href="#过程实现流程" class="headerlink" title="过程实现流程"></a>过程实现流程</h2><p><img src="http://image.wmgx.top/img/20190806020621.png" alt=""></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 50000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SENTINEL 2000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L[MAX/<span class="number">2</span>+<span class="number">2</span>],R[MAX/<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> left,<span class="keyword">int</span> mid,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1 = mid - left;    <span class="comment">//左边的元素数目</span></span><br><span class="line">    <span class="keyword">int</span> n2 = right -mid;    <span class="comment">//右边的元素数目</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span>  i = <span class="number">0</span>; i &lt; n1; i++)    L[i]=A[left+i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span>  i = <span class="number">0</span>; i &lt; n2; i++)    R[i]=A[mid+i];</span><br><span class="line">    L[n1]=R[n2]=SENTINEL;   <span class="comment">//设置最大值标志</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=left;k&lt;right;k++)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        A[k]= L[i]&lt;=R[j]? L[i++]: R[j++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left+<span class="number">1</span>&lt;right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(left+right)/<span class="number">2</span>;</span><br><span class="line">        mergeSort(A,left,mid);</span><br><span class="line">        mergeSort(A,mid,right);</span><br><span class="line">        merge(A,left,mid,right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> A[MAX],n,i;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    mergeSort(A,<span class="number">0</span>,n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;A[i]&lt;&lt;<span class="string">"  "</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong></p>
<p><img src="http://image.wmgx.top/img/20190806023609.png" alt=""></p>
<p>一共执行34次就完成了排序</p>
<h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><p>快速排序利用基准值将数组分为两个部分，比基准值小的在基准值前面，比基准值大的在基准值后面。如果基</p>
<h2 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h2><ol>
<li><p>以整个数组为对象执行quickSort</p>
</li>
<li><p>qurickSort过程:</p>
<ol>
<li><p>讲数组分割成前后两个局部数组</p>
</li>
<li><p>对前半部分执行quickSort</p>
</li>
<li><p>对后半部分执行quickSort</p>
</li>
</ol>
</li>
</ol>
<h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Max 100000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SENTINEL 2000000000</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> L[Max/<span class="number">2</span>+<span class="number">2</span>],R[Max/<span class="number">2</span>+<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> t,x;</span><br><span class="line">    x=A[r];</span><br><span class="line">    i=p<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(j=p;j&lt;r;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[j]&lt;x)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            i++;</span><br><span class="line">            t=A[i];</span><br><span class="line">            A[i]=A[j];</span><br><span class="line">            A[j]=t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    t=A[i+<span class="number">1</span>];</span><br><span class="line">    A[i+<span class="number">1</span>]=A[r];</span><br><span class="line">    A[r]=t;</span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    <span class="keyword">if</span>(p&lt;r)&#123;</span><br><span class="line">        q=partition(A,p,r);</span><br><span class="line">        quickSort(A,p,q<span class="number">-1</span>);</span><br><span class="line">        quickSort(A,q+<span class="number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,v;</span><br><span class="line">    <span class="keyword">int</span> A[Max];</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;A[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    quickSort(A,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d  "</span>,A[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n%d"</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190810023730.png" alt=""></p>
<p>如果中间值选的好的话次数大大减少，在上面的同等情况下，快排仅需要20次。</p>
<h1 id="利用标准库排序"><a href="#利用标准库排序" class="headerlink" title="利用标准库排序"></a>利用标准库排序</h1><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>sort的第一个参数制定排序对象开头的迭代器，第二个参数制定末尾的迭代器(排序对象不包含末尾)，对于数组要代入指针。</p>
<p>STL的sort基于快排实现，并且添加了对于最坏情况的应对机制，<strong>但是 sort 属于不稳定排序算法</strong></p>
<p>可以用stable_sort 基于归并排序的算法，但是耗费空间大一点，速度稍慢</p>
<h2 id="sort向量代码"><a href="#sort向量代码" class="headerlink" title="sort向量代码"></a>sort向量代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        v.push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190810024709.png" alt=""></p>
<h2 id="sort-数组排序"><a href="#sort-数组排序" class="headerlink" title="sort 数组排序"></a>sort 数组排序</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190810024709.png" alt=""></p>
<blockquote>
<p><a href="https://images2018.cnblogs.com/blog/941490/201805/941490-20180514224313332-798344959.png">https://images2018.cnblogs.com/blog/941490/201805/941490-20180514224313332-798344959.png</a></p>
<p><a href="https://www.cnblogs.com/onepixel/p/7674659.html">https://www.cnblogs.com/onepixel/p/7674659.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro npm换源</title>
    <url>/2019/08/06/npm%E6%8D%A2%E6%BA%90/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>因为要用hexo，所以要安装 nodejs 和 npm 。</p>
<p>在manjaro下 安装十分方便</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S nodejs</span><br><span class="line">sudo pacman -S npm</span><br></pre></td></tr></table></figure>
<h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>npm默认源是国外，相当慢，所以要换成国内的</p>
<h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p><strong>可以通过这条命令验证</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190806002120.png" alt=""></p>
<h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>安装cnpm</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>以后用npm的地方都可以用cnpm替换使用</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>程序安装</tag>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下 VSCode c/c++环境配置</title>
    <url>/2019/08/03/VSCode%20c_c++%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h2><p>安装完成的VSCode是英文的，作为一个英文不好的中国人，我还是喜欢看中文的界面。</p>
<p>点击左侧的</p>
<p><img src="http://image.wmgx.top/img/20190803011530.png" alt=""></p>
<p>会进入扩展商店</p>
<p>拓展商店中直接搜索Chinese 然后点击<code>Install</code>就行</p>
<p><img src="http://image.wmgx.top/img/20190803011412.png" alt=""></p>
<p>安装完成后重启应用就会变成中文界面。</p>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h3><p><img src="http://image.wmgx.top/img/20190803015747.png" alt=""></p>
<p>安装完成后窗口菜单栏下面就会出来一个</p>
<p><img src="http://image.wmgx.top/img/20190803015803.png" alt=""></p>
<p>当你的显示页面是一个程序源文件（单个文件，不是项目）时，点击这个按钮或者按ctrl+F5就可以直接运行这个程序，方便快捷。</p>
<p><img src="http://image.wmgx.top/img/20190803012236.png" alt=""></p>
<p>点击齿轮，点击配置，然后把右侧的Run In Terminal勾上，就会在控制台显示运行结果</p>
<h3 id="c-c"><a href="#c-c" class="headerlink" title="c/c++"></a>c/c++</h3><p>必装的插件。</p>
<h3 id="C-Intellisense"><a href="#C-Intellisense" class="headerlink" title="C++ Intellisense"></a>C++ Intellisense</h3><p>C++的只能提示工具</p>
<h3 id="C-C-Clang-Command-Adapter"><a href="#C-C-Clang-Command-Adapter" class="headerlink" title="C/C++ Clang Command Adapter"></a>C/C++ Clang Command Adapter</h3><p>提供静态检测（Lint）</p>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>主要是连个json文件</p>
<h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><p><img src="http://image.wmgx.top/img/20190803013140.png" alt=""></p>
<p>点击调试，然后选择添加配置。会自动生成lanunch.json文件</p>
<p>这是我的配置，可以直接复制过去</p>
<p>要注意的就是</p>
<p><code>&quot;program&quot;: &quot;${workspaceFolder}/hello.out&quot;,    //当前目录下编译后的可执行文件</code></p>
<figure class="highlight plain"><figcaption><span>"build"`</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">这里的hello.out应该是你生成的执行文件，而build 应该是你的tasks的lable</span><br><span class="line"></span><br><span class="line">```json</span><br><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;debug cpp&quot;,    //名称</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/hello.out&quot;,    //当前目录下编译后的可执行文件</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,    //表示当前目录</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false, // 在vscode自带的终端中运行，不打开外部终端</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,    //用gdb来debug</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;preLaunchTask&quot;: &quot;build&quot; //执行lanuch之前运行的task</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h3><p>按住ctrl+shift+p</p>
<p>输入tasks，选择configure Task </p>
<p><img src="http://image.wmgx.top/img/20190803013547.png" alt=""></p>
<p>选择使用模板创建然后选others</p>
<p><img src="http://image.wmgx.top/img/20190803015826.png" alt=""></p>
<p>就会生成tasks.json文件</p>
<p>仍旧可以直接拷贝</p>
<p>参数应该是自己的，多个文件编译，和在bash中写一样，也可以用makefile</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">    // for the documentation about the tasks.json format</span><br><span class="line">    "version": "2.0.0",</span><br><span class="line">    "tasks": [</span><br><span class="line">        &#123;</span><br><span class="line">            "label": "build",     // task的名字</span><br><span class="line">            "type": "shell",   </span><br><span class="line">            "command": "g++",    //编译命令</span><br><span class="line">            "args": [    //编译参数列表</span><br><span class="line">                "hello.cpp",</span><br><span class="line">                "-o",</span><br><span class="line">                <span class="string">"hello.out"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="c-cpp-properties-json"><a href="#c-cpp-properties-json" class="headerlink" title="　c_cpp_properties.json"></a>　c_cpp_properties.json</h3><p> ctrl+shift+p 输入<code>c/c++:Edit Configurations</code>　选择这一项就可以创建一个<code>c_cpp_properties.json</code>文件</p>
<p><img src="http://image.wmgx.top/img/20190803014202.png" alt=""></p>
<p>不用改动，我也贴出来我的配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Linux"</span>,</span><br><span class="line">            <span class="attr">"includePath"</span>: [</span><br><span class="line">                <span class="string">"$&#123;workspaceFolder&#125;/**"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"defines"</span>: [],</span><br><span class="line">            <span class="attr">"compilerPath"</span>: <span class="string">"/usr/bin/gcc"</span>,</span><br><span class="line">            <span class="attr">"cStandard"</span>: <span class="string">"c11"</span>,</span><br><span class="line">            <span class="attr">"cppStandard"</span>: <span class="string">"c++17"</span>,</span><br><span class="line">            <span class="attr">"intelliSenseMode"</span>: <span class="string">"gcc-x64"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"version"</span>: <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果有自己的外链库也是添加到这里面。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>程序安装</tag>
        <tag>经验</tag>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro kde 更换 dde 桌面</title>
    <url>/2019/08/02/manjarokde%E6%9B%B4%E6%8D%A2dde%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[<p>当我配置完成一切，各种工具，各种精美的动画效果，炫酷的特效。准备写博客的时候，发现复制到剪贴板中的图片，<strong>没有！没有！还是没有！</strong></p>
<p>上网一查，发现是kde中自带的剪贴板不能保存图片(里面有个设置，不保存图片，我关闭了，还是不行)，无奈下，网上有人说换剪贴板。但是我实在是不会换。</p>
<p>没办法舍弃了一切，放弃kde 安装dde，转了一圈又回来了。（安装deepin的桌面，不是deepin的系统） </p>
<h3 id="1-下载dde"><a href="#1-下载dde" class="headerlink" title="1. 下载dde"></a>1. 下载dde</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S deepin deepin-extra</span><br></pre></td></tr></table></figure>
<h3 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h3><p>将<code>/etc/lightdm/lightdm.conf</code>中的选项<code>greeter-session</code>设置为<code>lightdm-deepin-greeter</code></p>
<p><img src="http://image.wmgx.top/img/20190802033737.png" alt=""></p>
<p>默认是注释掉的，将前面的#删除即可</p>
<h3 id="3-禁用sddm（kde）"><a href="#3-禁用sddm（kde）" class="headerlink" title="　3.禁用sddm（kde）"></a>　3.禁用sddm（kde）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> sddm</span><br></pre></td></tr></table></figure>
<h3 id="4-启用lightdm"><a href="#4-启用lightdm" class="headerlink" title="4.启用lightdm"></a>4.启用lightdm</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> lightdm</span><br></pre></td></tr></table></figure>
<h3 id="5-重启"><a href="#5-重启" class="headerlink" title="5.重启"></a>5.重启</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<h3 id="6-卸载kde配套相关（可选）"><a href="#6-卸载kde配套相关（可选）" class="headerlink" title="6.卸载kde配套相关（可选）"></a>6.卸载kde配套相关（可选）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -Rsc plasma</span><br><span class="line"></span><br><span class="line">pacman -Rsc kde-applications</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考：<a href="https://www.jianshu.com/p/a1e31a9a50dc">https://www.jianshu.com/p/a1e31a9a50dc</a></p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro，linux，踩坑记录</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro系统初始配置</title>
    <url>/2019/08/02/manjaro%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="换源更新"><a href="#换源更新" class="headerlink" title="换源更新"></a>换源更新</h2><p>manjaro中的包管理命令是 pacman 一个十分出色的包管理工具，解决了其他linux 下的安装依赖问题。</p>
<p><strong>常用命令</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">pacman -S  软件名   #安装</span><br><span class="line">pacman -Syu    #更新</span><br><span class="line">pacman -R 软件名    #移除</span><br></pre></td></tr></table></figure>
<p>安装完系统，首要就是更新软件和系统，更新之前，要换源，换成中国的源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure>
<p>这条命令换源到中国，并按速度排序</p>
<p><img src="http://image.wmgx.top/img/20190802024811.png" alt=""></p>
<p>执行完命令之后会弹出这样的对话框</p>
<p><img src="http://image.wmgx.top/img/20190802024753.png" alt=""></p>
<p>选择快的，点OK就可以了。</p>
<p>更新一下源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syy</span><br></pre></td></tr></table></figure>
<p>然后更新系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190803014837.png" alt=""></p>
<p>个人喜欢vim，先安装一个vim后面要用到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -S vim</span><br></pre></td></tr></table></figure>
<p>添加archlinuxcn软件源（archlinuxcn是一个中国的软件源，包含了很多常用的中文软件和工具）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>
<p>在文件最下面添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>
<p>更新软件源并导入公钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure>
<p>系统的初始配置就做好了</p>
<h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><h3 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h3><p>manjaro中带有图形管理工具，可以完成应用的安装，删除，检索等操作，我系统在现在是KDE的管理工具</p>
<p><img src="http://image.wmgx.top/img/20190802032408.png" alt=""></p>
<p>个人感觉不如gonme中的好用，但是却不知道怎么更换，没办法了。</p>
<h3 id="安装yaourt（有些东西pacman装不了）"><a href="#安装yaourt（有些东西pacman装不了）" class="headerlink" title="安装yaourt（有些东西pacman装不了）"></a>安装yaourt（有些东西pacman装不了）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S yaourt</span><br></pre></td></tr></table></figure>
<h3 id="安装-chrome"><a href="#安装-chrome" class="headerlink" title="安装 chrome"></a>安装 chrome</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure>
<h3 id="安装截图工具"><a href="#安装截图工具" class="headerlink" title="安装截图工具"></a>安装截图工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S deepin-screenshot</span><br></pre></td></tr></table></figure>
<h3 id="安装QQ"><a href="#安装QQ" class="headerlink" title="安装QQ"></a>安装QQ</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S deepin.com.qq.im</span><br></pre></td></tr></table></figure>
<h3 id="安装TIM-kde下不好装QQ，TIM还好"><a href="#安装TIM-kde下不好装QQ，TIM还好" class="headerlink" title="安装TIM(kde下不好装QQ，TIM还好)"></a>安装TIM(kde下不好装QQ，TIM还好)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S deepin.com.qq.office</span><br></pre></td></tr></table></figure>
<h3 id="安装网易云音乐"><a href="#安装网易云音乐" class="headerlink" title="安装网易云音乐"></a>安装网易云音乐</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S netease-cloud-music</span><br></pre></td></tr></table></figure>
<h3 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx-im</span><br><span class="line">sudo pacman -S fcitx-configtool</span><br><span class="line">sudo pacman -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure>
<p>添加输入法配置文件 <code>sudo vim ~/.xprofile</code> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190802031250.png" alt=""></p>
<p><img src="http://image.wmgx.top/img/20190802031320.png" alt=""></p>
<p>可以进行各种配置</p>
<p><strong>配置完需要重启计算机</strong></p>
<h3 id="安装-markdown-编辑器"><a href="#安装-markdown-编辑器" class="headerlink" title="　安装 markdown 编辑器"></a>　安装 markdown 编辑器</h3><p>不得不说比deepin安装得方便</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yaourt typora</span><br></pre></td></tr></table></figure>
<h3 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S visual-studio-code-bin</span><br></pre></td></tr></table></figure>
<h3 id="安装eclipse"><a href="#安装eclipse" class="headerlink" title="安装eclipse"></a>安装eclipse</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S eclipse</span><br></pre></td></tr></table></figure>
<h3 id="安装WPS"><a href="#安装WPS" class="headerlink" title="安装WPS"></a>安装WPS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ttf-wps-fonts</span><br></pre></td></tr></table></figure>
<h3 id="图床工具PicGo"><a href="#图床工具PicGo" class="headerlink" title="图床工具PicGo"></a>图床工具PicGo</h3><p>如果对图床工具有需要的话</p>
<p>直接到<a href="https://github.com/Molunerfinn/PicGo/releases">官网</a>下载AppImage文件，双击就可以用了</p>
<p><img src="http://image.wmgx.top/img/20190802032203.png" alt=""></p>
<p>到此为止，常用的软件都已经装上了</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>系统配置</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro安装</title>
    <url>/2019/08/02/manjaro%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>安装系统,最先就要制作启动盘嘛.</p>
<p>推荐以 <strong>dd 模式</strong>写入(不分系统区与数据区)</p>
<p>在进入U盘的时候一定要bios的安全启动(Secure Boot) 关闭(Disabled)不然进不去系统.</p>
<p><img src="http://image.wmgx.top/img/20190802022641.png" alt=""></p>
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>然后就可以看到这个界面</p>
<p><img src="http://image.wmgx.top/img/20190802022838.png" alt=""></p>
<p><strong>如果你是双显卡的电脑，driver这里一定要设置为no-free，不然装好了之后，是黑屏</strong>。</p>
<p><img src="http://image.wmgx.top/img/20190802023158.png" alt=""></p>
<p>进入系统后会出现这个界面。从左上角可以选择语言，点击 <strong>启动安装程序</strong> 就可以进入系统安装界面了</p>
<p><img src="http://image.wmgx.top/img/20190802023352.png" alt=""></p>
<p>一步步设置下去。</p>
<p>如果像我一样，在移动硬盘中安装，一定要注意:</p>
<p>**硬盘是GPT格式！！！</p>
<p><strong>硬盘是GPT格式！！！</strong></p>
<p><strong>硬盘是GPT格式！！！</strong></p>
<p>不然这里没有你的移动硬盘出现（我为什么知道？我都被逼疯了我会不知道！？）</p>
<p>选择硬盘你可以自己选择挂载，也可直接全盘安装，都可以。然后就等待就可以了。</p>
<blockquote>
<p>因后写的经历，当初没来得及截图，图片来源：</p>
<p><a href="https://cloud.tencent.com/developer/article/1390999">https://cloud.tencent.com/developer/article/1390999</a></p>
<p><a href="https://www.cnblogs.com/smlile-you-me/p/8830949.html">https://www.cnblogs.com/smlile-you-me/p/8830949.html</a></p>
<p><a href="https://zhidao.baidu.com/question/2144265946313985668.html">https://zhidao.baidu.com/question/2144265946313985668.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>搞系统</tag>
      </tags>
  </entry>
  <entry>
    <title>git本机配置</title>
    <url>/2019/08/01/git%E6%9C%AC%E6%9C%BA%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name yourUserName</span><br><span class="line">git config --global user.email yourEmail@email</span><br></pre></td></tr></table></figure>
<h2 id="生成SSH秘钥"><a href="#生成SSH秘钥" class="headerlink" title="生成SSH秘钥"></a>生成SSH秘钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"YourEmail"</span> <span class="comment">#注意引号</span></span><br></pre></td></tr></table></figure>
<p>会在用户的目录下生成一个.ssh的文件夹</p>
<p>文件夹里面有两个文件，一个公钥一个私钥，需要讲公钥放到 <strong>github</strong>里面，才可以用本机访问github上自己的文件</p>
<p><img src="http://image.wmgx.top/img/20190801024658.png" alt=""></p>
<h2 id="将秘钥复制到github"><a href="#将秘钥复制到github" class="headerlink" title="将秘钥复制到github"></a>将秘钥复制到github</h2><p><img src="http://image.wmgx.top/img/20190801024831.png" alt=""></p>
<p>这就是秘钥</p>
<p>登录github在</p>
<p><img src="http://image.wmgx.top/img/20190801025036.png" alt=""></p>
<p>左侧一列中选择</p>
<p><img src="http://image.wmgx.top/img/20190801025059.png" alt=""></p>
<p>然后点击</p>
<p><img src="/home/gx/.config/Typora/typora-user-images/1564599084738.png" alt="1564599084738"></p>
<p>复制进来刚才的秘钥就可以了</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190806002803.png" alt=""></p>
<p>中间会问你一次，回答yes就行，</p>
<p>如果提示最后一行，就说明你成功了！！！</p>
<p><strong>如果提示</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sign_and_send_pubkey: signing failed: agent refused operation</span><br><span class="line">Permission denied (publickey).</span><br></pre></td></tr></table></figure>
<p>请查看博客 <a href="http://blog.wmgx.top/2019/07/28/git%E6%B7%BB%E5%8A%A0%E5%85%AC%E9%92%A5%E5%90%8E%E6%8A%A5%E9%94%99sign_and_send_pubkey%20signing%20failed/">git 配置后 ssh -T git@github.com出错</a></p>
]]></content>
      <categories>
        <category>程序安装</category>
      </categories>
      <tags>
        <tag>程序安装</tag>
        <tag>git</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro linux 安装总结</title>
    <url>/2019/08/01/manjaro%20linux%20%E5%AE%89%E8%A3%85%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>折腾了好几天，从deepin 到 manjaro 折腾好几天终于可以说是勉强弄好了（搞累了，不想搞了）</p>
<p><strong>没有前面的可能没有任何截图</strong></p>
<h2 id="deepin"><a href="#deepin" class="headerlink" title="deepin"></a>deepin</h2><p>deepin 一开始再B站上看见了他的UI ，感觉挺漂亮，就往打算装了移动硬盘里。</p>
<p>因为不喜欢开机选择系统，也不想放弃windows , 第一次往移动硬盘里面装，不知道会不会把引导写进我的系统里面，我就把电脑本身的两个硬盘都拆卸了下来（原谅我的怂）。</p>
<p>装好之后，确实很漂亮，也让我很喜欢，但是最新版本中极力吹鼓的云同步功能却说我不在他们的服务范围内（WTF！？）虚拟机里还能用，一番百度，看论坛，也没有看到解决办法，还好，云同步并不是那么重要暂时，不要就不要吧。</p>
<p>一番操作猛如虎，终于完成了基础工作的配置，下面的dock非常不错，但是没有mac中的特效，</p>
<p><img src="http://image.wmgx.top/img/20190731231245.png" alt=""></p>
<p>这个启动器也是非常不错的体验<img src="http://image.wmgx.top/img/20190731231412.png" alt=""></p>
<p>好吧，，，这个截图是我现在系统的截图，manjao用的dde的桌面……</p>
<p>deepin 我一共装了两回，崩了两次。</p>
<p><strong>第一次是更新系统</strong> ，好吧，是我等不及，他一直更新不完我就重启了，然后就进不了系统界面了，输入密码之后是黑屏……无奈重装，可怜我一晚上的部署操作。</p>
<p><strong>第二次是卸载软件</strong>，我应该是不太专业……不知道卸载了什么，反正突然系统自带的应用丢了一大部分，深度应用商店，深度截图，深度……都没了。</p>
<p>这一次装的时候，懒得拆硬盘了，直接选中移动硬盘，全盘安装，很幸运，引导卸载了移动硬盘中。</p>
<p>无奈下，弃坑，转投manjaro</p>
<h2 id="manjaro"><a href="#manjaro" class="headerlink" title="manjaro"></a>manjaro</h2><p>manjaro 说实话，在用之前我真不知道还有这么个系统，之前听别人提到的时候我以为是和docker类似的什么环境。</p>
<p>manjaro采用滚动式升级，升级系统不用重装，也可以回滚，个人感觉很不错</p>
<p>manjaro 几乎涵盖了所有主流的桌面系统，gonme，kde，dde等等</p>
<p>第一次安装了一个自带gonme的manjaro，个人感觉还是很不错的，但是在本人手残的一系列操作下，gonme还是崩溃了，至少我不知道怎么把他变回原样了，我选择重装</p>
<p>重装了一个kde的桌面，第一次进系统，不得不说，真的……</p>
<p>…………</p>
<p><strong>好慢啊…………</strong></p>
<p>…………</p>
<p>但是kde的ui是真的漂亮，仿mac做的很好，各种窗口的动画我也非常喜欢。</p>
<p>但是很受不了的是，<strong>kde自带的剪贴板存不了图片</strong>,这真的很让人头疼，我想到了换剪贴板，但是多方查阅资料后，我发现，还是不会换。</p>
<p>无奈下我选择了重装桌面，只重装桌面，安装dde（没错，就是深度）然后将kde卸载。</p>
<p>但是回到dde后发现，，，，kde的动画真好看，dde的ui虽然不错但是kde动画真好看</p>
<p>对了 kde 对于qq好像不是很支持，安装qq的时候安装的很费劲。</p>
<p>这就是我现在的桌面了</p>
<p><img src="http://image.wmgx.top/img/20190731231245.png" alt=""></p>
<p>经过了长达两三天，无数次的重装，终于得到了一个稍微满意的系统。</p>
<p>中间猜的坑，会单独做总结。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux</tag>
        <tag>踩坑经验</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin linux 下安装Typora</title>
    <url>/2019/07/29/deepin%20linux%20%E4%B8%8B%E5%AE%89%E8%A3%85Typora/</url>
    <content><![CDATA[<p>一直喜欢Typora，刚刚装了deepin Linux ，打算安装一下，但是照着官网给出的教程，却总是报错</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class="line"><span class="meta">#</span><span class="bash"> add Typora<span class="string">'s repository</span></span></span><br><span class="line">sudo add-apt-repository 'deb https://typora.io/linux ./'</span><br><span class="line">sudo apt-get update</span><br><span class="line"><span class="meta">#</span><span class="bash"> install typora</span></span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure>
<p>这是官网给出的教程，但是在第一步就报错，报了两个文件缺失的错误，当时没有截下图来。</p>
<p>之后执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install dirmngr</span><br></pre></td></tr></table></figure>
<p>就可以了</p>
<p>但是在执行第二行的时候也报错，这里有两个解决办法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository 'deb https://typora.io/linux ./‘</span><br></pre></td></tr></table></figure>
<p><strong>方法一：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>然后手动添加sudo add-apt-repository ‘deb <a href="https://typora.io/linux">https://typora.io/linux</a> ./”（不带双引号）</p>
<p><strong>方法二：需要安装</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-software-properties</span><br><span class="line">sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure>
<p>但是</p>
<p><img src="http://image.wmgx.top/img/20190728033543.png" alt=""></p>
<p>依赖有问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo aptitude install python-software-properties</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190728033904.png" alt=""></p>
<p>同理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo aptitude install software-properties-common</span><br></pre></td></tr></table></figure>
<p>然后运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ‘deb https://typora.io/linux ./’ </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure>
<p>就可以完成安装</p>
<p>执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">typora</span><br></pre></td></tr></table></figure>
<p>就可以运行了</p>
<p><img src="http://image.wmgx.top/img/20190728151448.png" alt=""></p>
]]></content>
      <categories>
        <category>程序安装</category>
      </categories>
      <tags>
        <tag>程序安装</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>git添加公钥后报错sign_and_send_pubkey</title>
    <url>/2019/07/28/git%E6%B7%BB%E5%8A%A0%E5%85%AC%E9%92%A5%E5%90%8E%E6%8A%A5%E9%94%99sign_and_send_pubkey%20signing%20failed/</url>
    <content><![CDATA[<h3 id="错误描述"><a href="#错误描述" class="headerlink" title="错误描述"></a>错误描述</h3><p>当在github上添加公钥之后运行<code>ssh -T git@github.com</code></p>
<p><strong>提示错误：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sign_and_send_pubkey: signing failed: agent refused operation</span><br><span class="line">Permission denied (publickey).</span><br></pre></td></tr></table></figure>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span><br><span class="line">ssh-add</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190728155822.png" alt=""></p>
]]></content>
      <categories>
        <category>踩坑记录</category>
      </categories>
      <tags>
        <tag>程序安装</tag>
        <tag>git</tag>
        <tag>经验</tag>
        <tag>错误解决</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构-笔记4-递归与分治</title>
    <url>/2019/07/26/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%94%E8%AE%B04-%E9%80%92%E5%BD%92%E4%B8%8E%E5%88%86%E6%B2%BB/</url>
    <content><![CDATA[<h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>递归是指自己调用自己的函数。</p>
<p>如下面的阶乘递归</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fact(<span class="keyword">int</span> n)&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">return</span> fact(n<span class="number">-1</span>)*n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>递归函数必须要设置出口，也就是上面的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> n;</span><br></pre></td></tr></table></figure>
<h2 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h2><p>分治的过程</p>
<ol>
<li>将问题分割成局部问题(Divide)</li>
<li><p>递归地求解局部问题(Solve)</p>
</li>
<li><p>将局部问题的解整合成原问题的解(Conquer)</p>
</li>
</ol>
<p>搜索：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">findMax(<span class="keyword">int</span> A[],l,r)&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    m=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> A[l]</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        u=findMax(A,l,m)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构 笔记2——数据结构</title>
    <url>/2019/07/10/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%94%E8%AE%B02/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="栈-Stack"><a href="#栈-Stack" class="headerlink" title="栈(Stack)"></a>栈(Stack)</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>后入先出（Last In First Out,LIFO）</p>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul>
<li>push(X)：在栈的顶部压入元素X</li>
<li>pop(): 从栈的顶部取出元素</li>
<li>isEmpty()：检查栈是否为空</li>
<li>isFull(): 检查栈是否已满</li>
</ul>
<p>一般情况下，栈还具有 “引用栈顶元素”和”检查栈中是否含有指定数据“的操作</p>
<h2 id="队列-Queue"><a href="#队列-Queue" class="headerlink" title="队列(Queue)"></a>队列(Queue)</h2><h3 id="规则-1"><a href="#规则-1" class="headerlink" title="规则"></a>规则</h3><p>先入先出（First In First Out）</p>
<h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><ul>
<li><p>enqueue(x)：在队列的末端添加元素x</p>
</li>
<li><p>dequeue(): 从队列开头取出元素</p>
</li>
<li><p>isEmpty(): 检查队列是否为空</p>
</li>
<li><p>isFull()：检查队列是否已满</p>
</li>
</ul>
<p>一般情况下，队列还具有 “引用队列第一个元素”和”检查队列中是否含有指定数据“的操作</p>
<h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="逆波兰表示法-栈的应用"><a href="#逆波兰表示法-栈的应用" class="headerlink" title="逆波兰表示法(栈的应用)"></a>逆波兰表示法(栈的应用)</h2><p>逆波兰表示法是一种将操作符写在操作数后面的方法，又叫后缀表示法<strong>，相较于我们日常使用的</strong>中缀表示法**，它的优势在于不需要括号</p>
<p>例：$（1+2）\times (5+4) $ ==&gt;&gt;$1\space 2 + 5\space 4 + \times $</p>
<ol>
<li>将 1 2 压入栈中</li>
<li>遇到运算符，从栈中取出两个操作数，按运算符运算，例中为+，将运算结果压入栈中，栈中数据变成了 3</li>
<li>将 5 4 压入栈中，栈中数据变为了 3 5 4</li>
<li>遇到操作符+ 取出两个操作数5 4 运算结果为9，压入栈中，栈中变为3 9</li>
<li>遇到操作符$\times$ 取出3 9 运算结果为27</li>
</ol>
<p>一个并不完善的简单过程</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//本程序仅支持0-9的数字运算</span></span><br><span class="line"><span class="keyword">int</span> top,<span class="built_in">stack</span>[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>[++top]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">stack</span>[top--];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> i,a,b;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    top=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">while</span>(s[i]!=<span class="string">'\0'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">'+'</span>)&#123;</span><br><span class="line">            a=pop();</span><br><span class="line">            b=pop();</span><br><span class="line">            push(a+b);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'-'</span>)&#123;</span><br><span class="line">            a=pop();</span><br><span class="line">            b=pop();</span><br><span class="line">            push(a-b);        </span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'*'</span>)&#123;</span><br><span class="line">            a=pop();</span><br><span class="line">            b=pop();</span><br><span class="line">            push(a*b);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'/'</span>)&#123;<span class="comment">//整除结果</span></span><br><span class="line">            a=pop();</span><br><span class="line">            b=pop();</span><br><span class="line">            push(a/b);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            push(s[i]<span class="number">-48</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,pop());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>运行结果：</strong></p>
<p><img src="http://image.wmgx.top/img/20190724183624.png" alt=""></p>
<h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现有名称为namei且处理时间为timei的n个任务按照顺序排成一列，</span><br><span class="line">CPU通过循环调度法逐一处理这些任务，每个任务最多处理q ms</span><br><span class="line">(这个时间称为时间片)。如果q ms之后任务尚未处理完毕，那么该任务</span><br><span class="line">将被移动至队伍最末尾，CPU随即开始处理下一个任务</span><br><span class="line">    举个例子，假设q是100，然后有如下任务队列。</span><br><span class="line">	A(150) -- B(80) -- C(200) -- D(200)</span><br><span class="line">	首先A被处理100 ms，然后带着剩余的50 ms移动至队尾</span><br><span class="line">	B(80) -- C(200) -- D(200) -- A(50)</span><br><span class="line">	随后B被处理80 ms，在总计第180 ms时完成处理，从队列中消失</span><br><span class="line">	C(200) -- D(200) -- A(50)</span><br><span class="line">	接下来C被处理100 ms，然后带着剩余的100 ms移动至队尾。</span><br><span class="line">	D(200) -- A(50) -- C(100) </span><br><span class="line">	之后同理，一直循环到处理完所有任务。</span><br><span class="line">	请编写一个程序，模拟循环调度法。</span><br><span class="line">输入</span><br><span class="line">	输入形式如下</span><br><span class="line">	n q</span><br><span class="line">	name1 time1</span><br><span class="line">	name2 time2</span><br><span class="line">	...</span><br><span class="line">	namen timen</span><br><span class="line">	第一行输入表示任务数的整数n与时间片的整数q，用一个空格隔开</span><br><span class="line">	接下来n行输入各任务的信息。字符串namei与timei用一个空格隔开。</span><br><span class="line">输出</span><br><span class="line">	按照任务完成的先后顺序输出各任务名以及结束时间，任务名与对应结束时间用空格隔开，</span><br><span class="line">	每一对任务名与结束时间占一行。</span><br><span class="line">限制</span><br><span class="line">	1 ≤n ≤100 000</span><br><span class="line">	1 ≤q ≤1000</span><br><span class="line">	1 ≤timei ≤50 000</span><br><span class="line">	1 ≤字符串namei的长度 ≤10</span><br><span class="line">	1 ≤timei的和 ≤1 000 000 </span><br><span class="line">	</span><br><span class="line">	输入示例				输出示例 </span><br><span class="line">	5 100					p2 180 </span><br><span class="line">	p1 150					p5 400</span><br><span class="line">	p2 80					p1 450</span><br><span class="line">	p3 200					p3 350</span><br><span class="line">	p4 350					p4 800</span><br><span class="line">	p5 20</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    以数组实验队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100005</span></span><br><span class="line"><span class="keyword">long</span> tail ,head ; <span class="comment">//头尾元素位置</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">queue</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">long</span> time;</span><br><span class="line"></span><br><span class="line">&#125;q;</span><br><span class="line">q Q[MAX];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tail==head) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isFull</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tail+<span class="number">1</span>==head) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(q p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!isFull())&#123;</span><br><span class="line">        Q[tail]=p;</span><br><span class="line">        tail=(tail+<span class="number">1</span>)%MAX;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">q <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">    q p;</span><br><span class="line">    <span class="keyword">if</span>(!isEmpty())&#123;</span><br><span class="line">        p=Q[head];</span><br><span class="line">        head=(head+<span class="number">1</span>)%MAX;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    tail=head=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> elaps=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    q u;</span><br><span class="line">    <span class="keyword">long</span> n,qtime;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%ld %ld"</span>,&amp;n,&amp;qtime);</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %ld"</span>,u.name,&amp;u.time);</span><br><span class="line">        enqueue(u);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!isEmpty())&#123;</span><br><span class="line">        u=dequeue();</span><br><span class="line">        <span class="keyword">if</span> (u.time-qtime&lt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            elaps+=u.time;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s %ld\n"</span>,u.name,elaps);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        elaps+=qtime;</span><br><span class="line">        u.time-=qtime;</span><br><span class="line">        enqueue(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果:</p>
<p><img src="http://image.wmgx.top/img/20190724183644.png" alt=""></p>
<h1 id="STL-C-标准库"><a href="#STL-C-标准库" class="headerlink" title="STL(C++标准库)"></a>STL(C++标准库)</h1><p>C++库以提供“模板”为主，是指不必预先制定类型的函数或类。</p>
<p>STL为用户提供了多种名为辅容器（Container）的类，用于管理数据集合。在创建动态数组、表、栈、队列等结构时，只需要定义对应的容器。然后就可以通过调用成员函数或方法使用。</p>
<h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回栈的元素数</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">top()</td>
<td style="text-align:center">返回栈顶元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">pop()</td>
<td style="text-align:center">从栈中取出并删除元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">push(x)</td>
<td style="text-align:center">向栈中添加元素x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">当栈为空时返回true</td>
<td style="text-align:center">O(1)</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line">    S.push(<span class="number">1</span>);</span><br><span class="line">    S.push(<span class="number">2</span>);</span><br><span class="line">    S.push(<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈的大小："</span>&lt;&lt;S.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素："</span>&lt;&lt;S.top()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    S.pop();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈的大小："</span>&lt;&lt;S.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素："</span>&lt;&lt;S.top()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183720.png" alt=""></p>
<p>通过栈模板实现逆波兰表示</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,a,b;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">while</span> (s[i]!=<span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(s[i])&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">                a=stk.top();stk.pop();</span><br><span class="line">                b=stk.top();stk.pop();</span><br><span class="line">                stk.push(a+b);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">                a=stk.top();stk.pop();</span><br><span class="line">                b=stk.top();stk.pop();</span><br><span class="line">                stk.push(a-b);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">                a=stk.top();stk.pop();</span><br><span class="line">                b=stk.top();stk.pop();</span><br><span class="line">                stk.push(a*b);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                stk.push(s[i]<span class="number">-48</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;stk.top()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183734.png" alt=""></p>
<h2 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回队列中的元素数目</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">front()</td>
<td style="text-align:center">返回队头的元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">pop()</td>
<td style="text-align:center">从队列中取出并删除元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">push(x)</td>
<td style="text-align:center">在队列中添加元素x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">empty()</td>
<td style="text-align:center">当队列为空时返回true</td>
<td style="text-align:center">O(1)</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">queue</span>&lt;<span class="built_in">string</span>&gt; que;</span><br><span class="line">   que.push(<span class="string">"red"</span>);</span><br><span class="line">   que.push(<span class="string">"yellow"</span>);</span><br><span class="line">   que.push(<span class="string">"yellow"</span>);</span><br><span class="line">   que.push(<span class="string">"blue"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;que.front()&lt;&lt;<span class="string">"\tnow size:"</span>&lt;&lt;que.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   que.pop();</span><br><span class="line"></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;que.front()&lt;&lt;<span class="string">"\tnow size:"</span>&lt;&lt;que.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   que.pop();</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;que.front()&lt;&lt;<span class="string">"\tnow size:"</span>&lt;&lt;que.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   que.pop();</span><br><span class="line"></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;que.front()&lt;&lt;<span class="string">"\tnow size:"</span>&lt;&lt;que.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   que.pop();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183749.png" alt=""></p>
<p>用标准库模板实现上面的队列</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;&gt; que;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> n,q,t;</span><br><span class="line">    <span class="keyword">int</span> elaps=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;name&gt;&gt;t;</span><br><span class="line">        que.push(make_pair(name,t));</span><br><span class="line">    &#125;</span><br><span class="line">    pair&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; u;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        u=que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">if</span>(u.second-q&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            elaps+=u.second;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;u.first&lt;&lt;<span class="string">' '</span>&lt;&lt;elaps&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        u.second-=q;</span><br><span class="line">        elaps+=q;</span><br><span class="line">        que.push(u);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183758.png" alt=""></p>
<p>pair是保存对数值的结构体模板，声明时需要在&lt;&gt;中指令两个数据结构。make_pair用于生成一对数值，第一个元素通过first访问，第二个通过second访问</p>
<h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p>可以在添加元素是增加长度的数组成为动态数组或可变长数组。相对地，必须事先指定长度的是静态数组</p>
<p>STL中的vector（向量）实现了动态数组</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回向量的元素数目</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">push_back(x)</td>
<td style="text-align:center">在向量的末尾添加x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">pop_back()</td>
<td style="text-align:center">删除向量的最后一个元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">begin()</td>
<td style="text-align:center">返回指向向量开头的迭代器</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">end()</td>
<td style="text-align:center">返回指向向量结尾的迭代器</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">insert(p,x)</td>
<td style="text-align:center">在向量中迭代器p指向的位置插入x</td>
<td style="text-align:center">O(n)</td>
</tr>
<tr>
<td style="text-align:center">erase(p)</td>
<td style="text-align:center">删除向量中迭代器p指向的元素</td>
<td style="text-align:center">O(n)</td>
</tr>
<tr>
<td style="text-align:center">clear()</td>
<td style="text-align:center">删除向量中所有元素</td>
<td style="text-align:center">O(n)</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; v)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; vec;</span><br><span class="line">    vec.push_back(<span class="number">0.1</span>);</span><br><span class="line">    vec.push_back(<span class="number">0.2</span>);</span><br><span class="line">    vec.push_back(<span class="number">0.3</span>);</span><br><span class="line">    vec[<span class="number">2</span>]=<span class="number">0.4</span>;</span><br><span class="line">    output(vec);</span><br><span class="line">    </span><br><span class="line">    vec.insert(vec.begin()+<span class="number">2</span>,<span class="number">0.8</span>);</span><br><span class="line">    output(vec);</span><br><span class="line"></span><br><span class="line">    vec.erase(vec.begin()+<span class="number">1</span>);</span><br><span class="line">    output(vec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183848.png" alt=""></p>
<h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><p>list是一个双向列表</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size()</td>
<td style="text-align:center">返回向量的元素数目</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">push_back(x)</td>
<td style="text-align:center">在向量的末尾添加x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">push_front(x)</td>
<td style="text-align:center">在向量的开头添加x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">pop_back()</td>
<td style="text-align:center">删除向量的最后一个元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">pop_front()</td>
<td style="text-align:center">删除向量的开头元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">begin()</td>
<td style="text-align:center">返回指向向量开头的迭代器</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">end()</td>
<td style="text-align:center">返回指向向量结尾的迭代器</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">insert(p,x)</td>
<td style="text-align:center">在向量中迭代器p指向的位置插入x</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">erase(p)</td>
<td style="text-align:center">删除向量中迭代器p指向的元素</td>
<td style="text-align:center">O(1)</td>
</tr>
<tr>
<td style="text-align:center">clear()</td>
<td style="text-align:center">删除向量中所有元素</td>
<td style="text-align:center">O(n)</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">char</span>&gt; li;</span><br><span class="line">    li.push_back(<span class="string">'b'</span>);  <span class="comment">//[b]</span></span><br><span class="line">    li.push_front(<span class="string">'a'</span>); <span class="comment">//[ab]</span></span><br><span class="line">    li.push_back(<span class="string">'c'</span>);  <span class="comment">//[abc]</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;li.front();   <span class="comment">//a</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;li.back();    <span class="comment">//c</span></span><br><span class="line">    li.pop_front();     <span class="comment">//[bc]</span></span><br><span class="line">    li.push_back(<span class="string">'d'</span>);  <span class="comment">//[bcd]</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;li.front();   <span class="comment">//b</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;li.back();    <span class="comment">//d</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><img src="http://image.wmgx.top/img/20190724183903.png" alt=""></p>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构 笔记3——搜索</title>
    <url>/2019/07/10/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%94%E8%AE%B03-%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>搜索是从数据集合中找出目标元素的处理。</p>
<pre class="mermaid">graph LR
A{搜索} -->B(线性搜索)
A--> C(二分搜索)
A--> E(散列)</pre>



<h2 id="线性搜索"><a href="#线性搜索" class="headerlink" title="线性搜索"></a>线性搜索</h2><p>线性搜索是从数组开头顺次访问个元素，检查给该元素是否与目标值相等。相等则返回元素位置并结束搜索。如果检查完数组还没有发现目标值，则返回一个特殊值来说明。<strong>线性搜索的算法效率很低</strong>，但适用于任何形式的数据。</p>
<h2 id="二分搜索"><a href="#二分搜索" class="headerlink" title="二分搜索"></a>二分搜索</h2><p>二分搜索算法可以利用数据的大小进行高速搜索。二分搜索的前提是 <strong>已经排序</strong>。</p>
<p><strong>思路</strong>：</p>
<ol>
<li>将整个数组（升序）作为搜索范围</li>
<li>检查位于搜索范围正中央的元素</li>
<li>如果一致则结束</li>
<li>如果不一致则比较大小，小于的话，以前半部分为搜索范围执行第二步。否则以后半部分为范围执行。</li>
<li>如果到最后没找到，就返回特定值，表示未找到</li>
</ol>
<h2 id="散列法"><a href="#散列法" class="headerlink" title="散列法"></a>散列法</h2><p>在散列法中，各元素的存储位置由散列函数决定。散列既是一种数据结构，同时也是一种使用散列表的算法。只需要将关键字（key）带入就可得到对应位置。搜索效率很高。</p>
<h1 id="线性搜索-1"><a href="#线性搜索-1" class="headerlink" title="线性搜索"></a>线性搜索</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>请编写一个程序，输入包含 n 个整数的数列 s 以及包含 q 个不重复整数数列 T ，输出既包含于 T 又包含于 S 的整数个数 c</strong></p>
<p><strong>输入： 第一行输入 n，第二行输入代表 S 的 n 个整数，第三行输入 q，第四行输入代表 T 的 q 个整数。</strong></p>
<p><strong>输出：用1行输出C</strong></p>
<p><strong>限制： $n\leq1000$，$q\leq500$ ，$0\leq{S,T的元素}\leq{10^9}$，T中元素不重复</strong></p>
<p><strong>输入示例:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">3</span><br><span class="line">3 4 1</span><br></pre></td></tr></table></figure>
<p><strong>输出示例</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">search</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> n, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    A[n]=key;<span class="comment">//通过将最后一个置为key的方法，引入标记，可以提升效率，在处理大数据的时候会有显著效果</span></span><br><span class="line">    <span class="keyword">while</span>(A[i]!=key) i++;</span><br><span class="line">    <span class="keyword">return</span> i!=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,n,A[<span class="number">10001</span>],q,key,sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;A[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;q;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;key);</span><br><span class="line">        <span class="keyword">if</span> (search(A,n,key))</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>输出结果</strong></p>
<p><img src="http://image.wmgx.top/img/20190724183930.png" alt="">因为线性搜索的算法复杂度为$O(n)$，所以算法的复杂度$O(qn)$</p>
<h1 id="二分搜索-1"><a href="#二分搜索-1" class="headerlink" title="二分搜索"></a>二分搜索</h1><p>对于含有 n 个元素的素组执行线性搜索以及二分搜索时，最坏的情况下运算次数如下</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">元素数</th>
<th style="text-align:center">线性搜索</th>
<th style="text-align:center">二分搜索</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">100</td>
<td style="text-align:center">100</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">10000</td>
<td style="text-align:center">10000</td>
<td style="text-align:center">14</td>
</tr>
<tr>
<td style="text-align:center">1000000</td>
<td style="text-align:center">1000000</td>
<td style="text-align:center">20</td>
</tr>
</tbody>
</table>
</div>
<p>最坏情况下二分搜索的复杂度大概是$log_2n$</p>
<h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>同上题，假设输入有序数列</p>
<h2 id="程序-1"><a href="#程序-1" class="headerlink" title="程序"></a>程序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">search</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> n, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right=n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">        mid=(left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(key==A[mid]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(key&gt;A[mid])left=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> right=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,n,A[<span class="number">10001</span>],q,key,sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;A[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;q;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;key);</span><br><span class="line">        <span class="keyword">if</span> (search(A,n,key))</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>运行结果：</strong></p>
<p><img src="http://image.wmgx.top/img/20190724183948.png" alt=""></p>
<h1 id="散列法-1"><a href="#散列法-1" class="headerlink" title="散列法"></a>散列法</h1><p>不同于数组的下标索引，可以通过键值直接查到对应值，每一个键值都有一个唯一对应的值</p>
<p>数组索引 a[0],a[1],a[2]……</p>
<p>散列        a[key0],a[key1],a[key2]……</p>
<h2 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h2><ol>
<li>通过散列函数在键值与值之间建立一个对应的函数关系Hash() </li>
<li>存储位置可以通过 address=Hash(key) 的方式运算出来</li>
<li>在插入和搜索时通过步骤2的方式可以迅速得出键值对应值的存储位置</li>
</ol>
<h2 id="散列函数"><a href="#散列函数" class="headerlink" title="散列函数"></a>散列函数</h2><p>方法中步骤1中所涉及的函数关系叫做散列函数</p>
<p>散列函数在使用的时候应该注意：</p>
<ul>
<li><p>简单，快速的可以计算出结果</p>
</li>
<li><p>在双散列结构中，当多个键值的散列值相同时，即冲突发生时，可以调用hash1() hash2() hash3()……等一系列散列函数得到不同的散列值</p>
</li>
</ul>
<h1 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h1><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><p>迭代器是一种对象，可以对容器中对象进行迭代处理，指向容器中的位置</p>
<p><strong>可以使用的运算符</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">++</td>
<td style="text-align:center">指向下一个迭代器</td>
</tr>
<tr>
<td style="text-align:center">==，!=</td>
<td style="text-align:center">判断两个迭代器指向位置是否相等</td>
</tr>
<tr>
<td style="text-align:center">=</td>
<td style="text-align:center">将运算符右侧迭代器赋值给左侧迭代器</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">返回该位置元素</td>
</tr>
</tbody>
</table>
</div>
<p>容器函数</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">begin()</td>
<td style="text-align:center">返回容器的开头元素</td>
</tr>
<tr>
<td style="text-align:center">end()</td>
<td style="text-align:center">返回容器的最后一个元素</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter;</span><br><span class="line">    <span class="keyword">for</span>(iter=v.begin();iter!=v.end();iter++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*iter&lt;&lt;<span class="string">"  "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://image.wmgx.top/img/20190724193948.png" alt=""></p>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计：算法和数据结构 笔记1</title>
    <url>/2019/07/09/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%9A%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><h4 id="复杂性评估"><a href="#复杂性评估" class="headerlink" title="复杂性评估"></a>复杂性评估</h4><ul>
<li>时间复杂度：评估执行程序所需要的时间。可以估算出程序对计算机处理器的使用程序 </li>
<li>空间复杂度：评估执行程序 所需的存储空间。可以估算出程序 对计算机内存的使用程度</li>
</ul>
<p>“复杂度”大多数情况下是指的时间复杂度</p>
<p>大O表示法：大O表示法是一种评估算法效率的“标尺”，以诸如$O(n)$、$ O(n^2)$的形式表示算法的效率，其中n为问题的数据大小。</p>
<p><strong>常用的复杂度比较</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">$ n $</th>
<th style="text-align:center">$ log(n) $</th>
<th style="text-align:center">$ \sqrt n$</th>
<th style="text-align:center">$ nlog(n) $</th>
<th style="text-align:center">$  n^2 $</th>
<th style="text-align:center">$ 2^n $</th>
<th style="text-align:center">$ n! $</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">10</td>
<td style="text-align:center">25</td>
<td style="text-align:center">32</td>
<td style="text-align:center">120</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">30</td>
<td style="text-align:center">100</td>
<td style="text-align:center">1024</td>
<td style="text-align:center">3628800</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">80</td>
<td style="text-align:center">400</td>
<td style="text-align:center">1048576</td>
<td style="text-align:center">约$ 2.4 \times 10^{18}$</td>
</tr>
<tr>
<td style="text-align:center">50</td>
<td style="text-align:center">5</td>
<td style="text-align:center">7</td>
<td style="text-align:center">250</td>
<td style="text-align:center">2500</td>
<td style="text-align:center">约$ 10^{15}$</td>
<td style="text-align:center">约$ 3 \times 10^{64}$</td>
</tr>
<tr>
<td style="text-align:center">100</td>
<td style="text-align:center">6</td>
<td style="text-align:center">10</td>
<td style="text-align:center">600</td>
<td style="text-align:center">10000</td>
<td style="text-align:center">约$ 10^{30}$</td>
<td style="text-align:center">约$ 9.3\times 10^{157}$</td>
</tr>
<tr>
<td style="text-align:center">1000</td>
<td style="text-align:center">9</td>
<td style="text-align:center">31</td>
<td style="text-align:center">9000</td>
<td style="text-align:center">$ 10^6$</td>
<td style="text-align:center">约$ 10^{300}$</td>
<td style="text-align:center">约$ 4 \times 10^{2567}$</td>
</tr>
<tr>
<td style="text-align:center">$10^4$</td>
<td style="text-align:center">13</td>
<td style="text-align:center">100</td>
<td style="text-align:center">$ 1.3\times 10^{5}$</td>
<td style="text-align:center">$ 10^9$</td>
<td style="text-align:center">约$ 10^{3000}$</td>
<td style="text-align:center">约$ 10^{35660}$</td>
</tr>
<tr>
<td style="text-align:center">$10^5$</td>
<td style="text-align:center">16</td>
<td style="text-align:center">316</td>
<td style="text-align:center">$ 1.6 \times 10^{6}$</td>
<td style="text-align:center">$ 10^{10}$</td>
<td style="text-align:center">约$ 10^{30000}$</td>
<td style="text-align:center">约$ 10^{456574}$</td>
</tr>
<tr>
<td style="text-align:center">$ 10^6$</td>
<td style="text-align:center">19</td>
<td style="text-align:center">100</td>
<td style="text-align:center">$ 1.9 \times 10^{7}$</td>
<td style="text-align:center">$ 10^{12}$</td>
<td style="text-align:center">约$ 10^{300000}$</td>
<td style="text-align:center">约$ 10^{5565709}$</td>
</tr>
</tbody>
</table>
</div>
<h3 id="稳定排序"><a href="#稳定排序" class="headerlink" title="稳定排序"></a>稳定排序</h3><p>是指在出现多次相同数据时，能保证稳定输出的排序算法</p>
<h3 id="初等排序"><a href="#初等排序" class="headerlink" title="初等排序"></a>初等排序</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">排序</th>
<th style="text-align:center">最好</th>
<th style="text-align:center">最坏</th>
<th style="text-align:center">稳定情况</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">插入排序</td>
<td style="text-align:center">N（有序）</td>
<td style="text-align:center">$O(N^2)$</td>
<td style="text-align:center">稳定</td>
</tr>
<tr>
<td style="text-align:center">冒泡排序</td>
<td style="text-align:center">$O(N)$</td>
<td style="text-align:center">$O(N^2)$</td>
<td style="text-align:center">稳定</td>
</tr>
<tr>
<td style="text-align:center">选择排序</td>
<td style="text-align:center">$O(N^2)$</td>
<td style="text-align:center">$O(N^2)$</td>
<td style="text-align:center">不稳定</td>
</tr>
<tr>
<td style="text-align:center">希尔排序</td>
<td style="text-align:center">$O(N)$</td>
<td style="text-align:center">$O(N^2)$</td>
<td style="text-align:center">不稳定</td>
</tr>
</tbody>
</table>
</div>
<h5 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h5><p><strong> 步骤：</strong></p>
<ol>
<li>从第一个元素开始，该元素可以认为已经被排序    </li>
<li>取出下一个元素，在已经排序的元素序列中从后向前扫描</li>
<li>如果该元素（已排序）大于新元素，将该元素移到下一位置</li>
<li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</li>
<li>将新元素插入到该位置中</li>
<li>重复步骤2</li>
</ol>
<p><img src="http://image.wmgx.top/img/20190724183326.gif" alt="img"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void InsertSort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line">    for(int i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int j=i-1;</span><br><span class="line">        if(a[i]&lt;a[i-1])&#123; //若第i个元素小于第i-1个元素,移动有序序列插入------大于的话则直接插入 </span><br><span class="line">        int swap=a[i];  //存储将要排序的元素 </span><br><span class="line">        a[i]=a[i-1];   //向后移动一个元素 </span><br><span class="line">        while(swap&lt;a[j])//查询将要插入的位置 </span><br><span class="line">        &#123;</span><br><span class="line">            a[j+1]=a[j];</span><br><span class="line">            j--;       //元素后移 </span><br><span class="line">        &#125;</span><br><span class="line">        a[j+1]=swap;//循环结束 插入到指定位置 </span><br><span class="line">    &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h5><p><strong> 步骤：</strong></p>
<ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>
<li>针对所有的元素重复以上的步骤，除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>
</ol>
<p><img src="http://image.wmgx.top/img/20190724183423.gif" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuddleSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">int</span> swap=a[j];</span><br><span class="line">                a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>]=swap;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h5><p><strong>步骤：</strong></p>
<ol>
<li>未排序序列中找到最小元素，存放到排序序列的起始位置。</li>
<li>再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。</li>
<li>以此类推，直到所有元素均排序完毕。</li>
</ol>
<p><img src="http://image.wmgx.top/img/20190724183441.gif" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> min=i;  <span class="comment">//存放数组最小值的位置 </span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[min])&#123;</span><br><span class="line">                min=j;   <span class="comment">//找出最小值，并记录位置 </span></span><br><span class="line">            &#125;</span><br><span class="line">         &#125; </span><br><span class="line">         <span class="keyword">if</span>(min!=i) <span class="comment">//最小元素与第i个元素互换位置 </span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">int</span> swap=a[min];</span><br><span class="line">             a[min]=a[i];</span><br><span class="line">             a[i]=swap;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h5><p><strong>步骤：</strong></p>
<ol>
<li>选取间隔为g的元素进行插入排序</li>
<li>缩小g的范围，新的g与原g互质</li>
<li>重复执行步骤1，2</li>
<li>最后选取g=1执行一次插入排序 </li>
</ol>
<p><img src="http://image.wmgx.top/img/20190724183525.gif" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">insertionSort(A,n,g)&#123;</span><br><span class="line">    <span class="keyword">for</span> i = g to n<span class="number">-1</span></span><br><span class="line">        v=A[i]</span><br><span class="line">        j=i-g</span><br><span class="line">        <span class="keyword">while</span> j&gt;=<span class="number">0</span> &amp;&amp; A[j]&gt;v</span><br><span class="line">            A[j+g]=a[j]</span><br><span class="line">            j=j-g</span><br><span class="line">            cnt++</span><br><span class="line">         A[j+g]=v</span><br><span class="line">&#125;</span><br><span class="line">shellSort(A,n)&#123;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    m=?;</span><br><span class="line">    g[]=&#123;……,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">0</span> to m<span class="number">-1</span></span><br><span class="line">        insertionSort(A,n,g[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注： 最后一定要执行一次g=1的普通 插入排序 ，确保正确</strong></p>
<p>参考教材：《挑战程序设计竞赛2 算法数据结构》</p>
<p>参考资料：<a href="https://www.cnblogs.com/xaimicom/p/9189471.html">https://www.cnblogs.com/xaimicom/p/9189471.html</a></p>
]]></content>
      <categories>
        <category>算法学习</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
